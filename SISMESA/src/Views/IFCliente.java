/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * IFCliente.java
 *
 * Created on 22/10/2010, 15:05:58
 */
package Views;

import classess.CepWebService;
import classess.Utilitario;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author DK
 */
public class IFCliente extends javax.swing.JInternalFrame {

    Object[] options = {"Sim", "Não"};

    public IFCliente() {
        initComponents();
        //redimenciona o lookandFeeld de acordo com o selecionado
        SwingUtilities.updateComponentTreeUI(this);
        this.pack();
        PreencherJtableConsulta();
        PreencheComboRegioes();
        TFNome.requestFocus();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        datePickerFormatter1 = new org.jdesktop.swingx.calendar.DatePickerFormatter();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TbTelefone = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        TAObs = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        BTNovo = new javax.swing.JButton();
        BTSalvar = new javax.swing.JButton();
        BTExcluir = new javax.swing.JButton();
        TFcodCli = new javax.swing.JTextField();
        TFNome = new javax.swing.JTextField();
        TFRua = new javax.swing.JTextField();
        TFBairro = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        CBRegiao = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        TFVlrTaxaEntrega = new Componentes.DKJTFFloat();
        jLabel14 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        TFNumero = new Componentes.DKJTFInteger();
        jLabel15 = new javax.swing.JLabel();
        TFCep1 = new Componentes.DKJTFCep();
        TFCPF = new Componentes.DKJTFCpf();
        tfTelefone = new Componentes.DKJTFFone();
        TFCidade = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        CBEstado = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        FTFfiltro = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        TFDESCGERAL = new javax.swing.JTextField();
        BT_FILTER = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        TbPadrao = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setTitle("Cadastro de cliente");
        setMinimumSize(new java.awt.Dimension(658, 427));
        setRequestFocusEnabled(false);

        jPanel3.setLayout(null);

        jLabel1.setText("Código");
        jPanel3.add(jLabel1);
        jLabel1.setBounds(10, 0, 50, 14);
        jPanel3.add(jLabel3);
        jLabel3.setBounds(6, 167, 0, 0);

        jLabel2.setText("Nome");
        jPanel3.add(jLabel2);
        jLabel2.setBounds(60, 0, 260, 14);

        jLabel4.setText("Rua");
        jPanel3.add(jLabel4);
        jLabel4.setBounds(420, 50, 70, 14);

        jLabel6.setText("Bairro");
        jPanel3.add(jLabel6);
        jLabel6.setBounds(220, 50, 70, 14);

        jLabel7.setText("Número");
        jPanel3.add(jLabel7);
        jLabel7.setBounds(540, 50, 50, 14);

        TbTelefone.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id_cliente", "Lista de Telefones"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TbTelefone);
        TbTelefone.getColumnModel().getColumn(0).setMinWidth(0);
        TbTelefone.getColumnModel().getColumn(0).setPreferredWidth(0);
        TbTelefone.getColumnModel().getColumn(0).setMaxWidth(0);

        jPanel3.add(jScrollPane1);
        jScrollPane1.setBounds(340, 250, 290, 110);

        TAObs.setColumns(20);
        TAObs.setRows(5);
        TAObs.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TAObsKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(TAObs);

        jPanel3.add(jScrollPane2);
        jScrollPane2.setBounds(10, 120, 620, 60);

        jLabel8.setText("Observação");
        jPanel3.add(jLabel8);
        jLabel8.setBounds(10, 100, 130, 14);

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        BTNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Clear-32.png"))); // NOI18N
        BTNovo.setText("Limpar"); // NOI18N
        BTNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNovoActionPerformed(evt);
            }
        });

        BTSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/1287691458_thumb-up.png"))); // NOI18N
        BTSalvar.setText("Salvar"); // NOI18N
        BTSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTSalvarActionPerformed(evt);
            }
        });

        BTExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/delete_16.png"))); // NOI18N
        BTExcluir.setText("Excluir"); // NOI18N
        BTExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BTNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BTSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BTExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BTNovo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BTSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BTExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel3.add(jPanel5);
        jPanel5.setBounds(10, 290, 320, 70);

        TFcodCli.setBackground(new java.awt.Color(204, 204, 204));
        TFcodCli.setEditable(false);
        TFcodCli.setEnabled(false);
        TFcodCli.setFocusable(false);
        jPanel3.add(TFcodCli);
        TFcodCli.setBounds(10, 20, 44, 20);

        TFNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFNomeActionPerformed(evt);
            }
        });
        jPanel3.add(TFNome);
        TFNome.setBounds(60, 20, 350, 20);
        jPanel3.add(TFRua);
        TFRua.setBounds(420, 70, 110, 20);

        TFBairro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFBairroActionPerformed(evt);
            }
        });
        jPanel3.add(TFBairro);
        TFBairro.setBounds(220, 70, 190, 20);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Entrega"));

        CBRegiao.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CBRegiaoItemStateChanged(evt);
            }
        });

        jLabel12.setText("Taxa entrega");

        jLabel13.setText("Região/Taxa");

        TFVlrTaxaEntrega.setText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CBRegiao, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(85, 85, 85)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, 0, 1, Short.MAX_VALUE)
                    .addComponent(TFVlrTaxaEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel12))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CBRegiao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TFVlrTaxaEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel3.add(jPanel1);
        jPanel1.setBounds(10, 190, 320, 90);

        jLabel14.setText("Cep");
        jPanel3.add(jLabel14);
        jLabel14.setBounds(540, 0, 50, 14);

        jLabel5.setText("Telefone");
        jPanel3.add(jLabel5);
        jLabel5.setBounds(340, 200, 70, 14);

        jButton1.setBackground(new java.awt.Color(255, 0, 0));
        jButton1.setText("Excluir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1);
        jButton1.setBounds(510, 220, 73, 23);

        jButton2.setBackground(new java.awt.Color(0, 153, 0));
        jButton2.setText("Lançar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2);
        jButton2.setBounds(430, 220, 70, 23);

        TFNumero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFNumeroActionPerformed(evt);
            }
        });
        jPanel3.add(TFNumero);
        TFNumero.setBounds(540, 70, 90, 20);

        jLabel15.setText("CPF");
        jPanel3.add(jLabel15);
        jLabel15.setBounds(420, 0, 50, 14);

        TFCep1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TFCep1FocusLost(evt);
            }
        });
        jPanel3.add(TFCep1);
        TFCep1.setBounds(540, 20, 90, 20);
        jPanel3.add(TFCPF);
        TFCPF.setBounds(420, 20, 110, 20);
        jPanel3.add(tfTelefone);
        tfTelefone.setBounds(340, 220, 80, 20);
        jPanel3.add(TFCidade);
        TFCidade.setBounds(10, 70, 120, 20);

        jLabel9.setText("Estado");
        jPanel3.add(jLabel9);
        jLabel9.setBounds(140, 50, 60, 14);

        CBEstado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO" }));
        CBEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBEstadoActionPerformed(evt);
            }
        });
        jPanel3.add(CBEstado);
        CBEstado.setBounds(140, 70, 70, 20);

        jLabel10.setText("Cidade");
        jPanel3.add(jLabel10);
        jLabel10.setBounds(10, 50, 90, 14);

        jTabbedPane1.addTab("Cadastro", jPanel3);

        FTFfiltro.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel11.setText("Nome do cliente:"); // NOI18N

        TFDESCGERAL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TFDESCGERALKeyReleased(evt);
            }
        });

        BT_FILTER.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Clear-32.png"))); // NOI18N
        BT_FILTER.setText("Limpar"); // NOI18N
        BT_FILTER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_FILTERActionPerformed(evt);
            }
        });
        BT_FILTER.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BT_FILTERKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout FTFfiltroLayout = new javax.swing.GroupLayout(FTFfiltro);
        FTFfiltro.setLayout(FTFfiltroLayout);
        FTFfiltroLayout.setHorizontalGroup(
            FTFfiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FTFfiltroLayout.createSequentialGroup()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TFDESCGERAL, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
                .addComponent(BT_FILTER, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        FTFfiltroLayout.setVerticalGroup(
            FTFfiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FTFfiltroLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(FTFfiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(TFDESCGERAL, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addComponent(BT_FILTER)
        );

        TbPadrao.setAutoCreateRowSorter(true);
        TbPadrao.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        TbPadrao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Código", "Nome", "Rua", "Numero", "Bairro"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TbPadrao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TbPadraoMouseClicked1(evt);
            }
        });
        TbPadrao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TbPadraoKeyPressed1(evt);
            }
        });
        jScrollPane3.setViewportView(TbPadrao);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(FTFfiltro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 637, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(FTFfiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Pesquisa", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 642, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)
        );

        setBounds(100, 50, 658, 427);
    }// </editor-fold>//GEN-END:initComponents

    private void BTNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNovoActionPerformed
        LimpaCampos();
}//GEN-LAST:event_BTNovoActionPerformed

    private void BTSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTSalvarActionPerformed
        if (CBEstado.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(null, "Informe o estado!", "Alerta", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (TFcodCli.getText().isEmpty()) {
            SalvarCliente();
        } else {
            AlterarCliente();
        }
}//GEN-LAST:event_BTSalvarActionPerformed

    private void BTExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTExcluirActionPerformed
        DeletaCliente();
}//GEN-LAST:event_BTExcluirActionPerformed

    private void TFDESCGERALKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TFDESCGERALKeyReleased
        PreencherJtableConsulta();
}//GEN-LAST:event_TFDESCGERALKeyReleased

    private void BT_FILTERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BT_FILTERActionPerformed
        LimpaCamposSelecao();
        PreencherJtableConsulta();
}//GEN-LAST:event_BT_FILTERActionPerformed

    private void BT_FILTERKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BT_FILTERKeyPressed
//        if (evt.getKeyCode() == evt.VK_ENTER) {
//            LimpaCamposSelecao();
//            Filtra();
//        }
}//GEN-LAST:event_BT_FILTERKeyPressed

    private void TbPadraoMouseClicked1(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TbPadraoMouseClicked1
        if (evt.getClickCount() > 1) {
            posicionaProduto();
        }
}//GEN-LAST:event_TbPadraoMouseClicked1

    private void TbPadraoKeyPressed1(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TbPadraoKeyPressed1
        if (evt.getKeyCode() == evt.VK_ENTER) {
            posicionaProduto();

        }
}//GEN-LAST:event_TbPadraoKeyPressed1

    private void TFNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFNomeActionPerformed

    private void TFBairroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFBairroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFBairroActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ExluiTelefone();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        SalvarTelefone();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void TFNumeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFNumeroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFNumeroActionPerformed

    private void CBRegiaoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CBRegiaoItemStateChanged
        SetaValorTaxaEntrega();
    }//GEN-LAST:event_CBRegiaoItemStateChanged

    private void TFCep1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TFCep1FocusLost
//        GetCepWeb();
    }//GEN-LAST:event_TFCep1FocusLost

    private void CBEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBEstadoActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_CBEstadoActionPerformed

    private void TAObsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TAObsKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_TAB) {
            CBRegiao.requestFocus();
        }
    }//GEN-LAST:event_TAObsKeyPressed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTExcluir;
    private javax.swing.JButton BTNovo;
    private javax.swing.JButton BTSalvar;
    private javax.swing.JButton BT_FILTER;
    private javax.swing.JComboBox CBEstado;
    private javax.swing.JComboBox CBRegiao;
    private javax.swing.JPanel FTFfiltro;
    private javax.swing.JTextArea TAObs;
    private javax.swing.JTextField TFBairro;
    private Componentes.DKJTFCpf TFCPF;
    private Componentes.DKJTFCep TFCep1;
    private javax.swing.JTextField TFCidade;
    private javax.swing.JTextField TFDESCGERAL;
    private javax.swing.JTextField TFNome;
    private Componentes.DKJTFInteger TFNumero;
    private javax.swing.JTextField TFRua;
    private Componentes.DKJTFFloat TFVlrTaxaEntrega;
    private javax.swing.JTextField TFcodCli;
    private javax.swing.JTable TbPadrao;
    private javax.swing.JTable TbTelefone;
    private org.jdesktop.swingx.calendar.DatePickerFormatter datePickerFormatter1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private Componentes.DKJTFFone tfTelefone;
    // End of variables declaration//GEN-END:variables

    private void SalvarCliente() {
        ResultSet rsCliente = FMaster.con.executeSQL("select * from dlcliente where id_cliente = 0");
        try {
            rsCliente.first();
            rsCliente.moveToInsertRow();
            rsCliente.updateInt("id_cliente", Utilitario.getSequencia("dlcliente", "id_cliente"));
            rsCliente.updateString("nome", TFNome.getText());
            rsCliente.updateString("cidade", TFCidade.getText());
            rsCliente.updateString("uf", CBEstado.getSelectedItem().toString());
            rsCliente.updateString("rua", TFRua.getText());
            rsCliente.updateInt("numero", Integer.parseInt(TFNumero.getText().isEmpty() ? "0" : TFNumero.getText()));
            rsCliente.updateString("bairro", TFBairro.getText());
            rsCliente.updateString("cep", TFCep1.getText().replace(".", "").replace("-", ""));
            rsCliente.updateString("cpf", TFCPF.getText().replace(".", "").replace("-", ""));
            rsCliente.updateString("obs", TAObs.getText());
            rsCliente.updateFloat("taxa_entrega", Float.parseFloat(TFVlrTaxaEntrega.getText().isEmpty() ? "0" : TFVlrTaxaEntrega.getText().replace(",", ".")));
            rsCliente.updateInt("id_regiao", Integer.parseInt(CBRegiao.getSelectedItem().toString().substring(CBRegiao.getSelectedItem().toString().length() - 1, CBRegiao.getSelectedItem().toString().length())));
            rsCliente.insertRow();
            prencherHeder(rsCliente.getInt("id_cliente"));
            rsCliente.close();
            PreencherJtableConsulta();
        } catch (SQLException ex) {
            Logger.getLogger(IFCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void AlterarCliente() {
        ResultSet rsCliente = FMaster.con.executeSQL("select * from dlcliente where id_cliente  = '" + TFcodCli.getText() + "'");
        try {
            rsCliente.first();
            if (rsCliente.isFirst()) {
                int iresp = JOptionPane.showOptionDialog(null, "Deseja alterar?", "", JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE,
                        null, //do not use a custom Icon
                        options, //the titles of buttons
                        options[0]); //default button title
                if (iresp == 0) {

                    rsCliente.absolute(rsCliente.getRow());
                    rsCliente.updateString("nome", TFNome.getText());
                    rsCliente.updateString("rua", TFRua.getText());
                    rsCliente.updateString("cidade", TFCidade.getText());
                    rsCliente.updateString("uf", CBEstado.getSelectedItem().toString());
                    rsCliente.updateInt("numero", Integer.parseInt(TFNumero.getText().isEmpty() ? "0" : TFNumero.getText()));
                    rsCliente.updateString("bairro", TFBairro.getText());
                    rsCliente.updateString("cep", TFCep1.getText().replace(".", "").replace("-", ""));
                    rsCliente.updateString("cpf", TFCPF.getText().replace(".", "").replace("-", ""));
                    rsCliente.updateString("obs", TAObs.getText());
                    rsCliente.updateFloat("taxa_entrega", Float.parseFloat(TFVlrTaxaEntrega.getText().isEmpty() ? "0" : TFVlrTaxaEntrega.getText().replace(",", ".")));
                    rsCliente.updateInt("id_regiao", Integer.parseInt(CBRegiao.getSelectedItem().toString().substring(CBRegiao.getSelectedItem().toString().length() - 1, CBRegiao.getSelectedItem().toString().length())));
                    rsCliente.updateRow();
                    prencherHeder(rsCliente.getInt("id_cliente"));
                    PreencherJtableConsulta();
                }
            }
            rsCliente.close();
        } catch (SQLException ex) {
            Logger.getLogger(IFProduto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void prencherHeder(int aInt) {
        ResultSet rsCliente = FMaster.con.executeSQL("select * from dlcliente where id_cliente = '" + aInt + "'");
        try {
            rsCliente.first();
            if (rsCliente.isFirst()) {
                TFcodCli.setText(rsCliente.getString("id_cliente"));
                TFNome.setText(rsCliente.getString("nome"));
                TFRua.setText(rsCliente.getString("rua"));
                TFCidade.setText(rsCliente.getString("cidade"));
                CBEstado.setSelectedItem(rsCliente.getString("uf"));
                TFNumero.setText(rsCliente.getString("numero"));
                TFBairro.setText(rsCliente.getString("bairro"));
                TFCep1.setText(rsCliente.getString("cep"));
                TFCPF.setText(rsCliente.getString("cpf"));
                TAObs.setText(rsCliente.getString("obs"));
                TFVlrTaxaEntrega.setText(Utilitario.getFomatDecimal(rsCliente.getFloat("taxa_entrega")));

                String regiao_entrega = rsCliente.getString("id_regiao");
                ResultSet rsRegiao = FMaster.con.executeSQL("select * from dlregiao where id_regiao = '" + regiao_entrega+ "'");
                rsRegiao.first();
                if (rsRegiao.isFirst()) {
                    CBRegiao.setSelectedItem(rsRegiao.getString("descricao") + "                                             " + rsRegiao.getString("id_regiao"));
                } else {
                    CBRegiao.setSelectedIndex(0);
                }
                rsRegiao.close();
            }
            rsCliente.close();
            PreencherJtableTelefones();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problema no posicionamento do produto");
        }
        HabilitaBtnHeder();
    }

    private void HabilitaBtnHeder() {
        if (TFcodCli.getText().isEmpty()) {
            BTSalvar.setEnabled(false);
            BTExcluir.setEnabled(false);
        } else {
            BTSalvar.setEnabled(true);
            BTExcluir.setEnabled(true);
        }
    }

    private void LimpaCampos() {
        TFcodCli.setText("");
        TFNome.setText("");
        TFRua.setText("");
        TFNumero.setText("");
        TFBairro.setText("");
        TFCep1.setText("");
        TAObs.setText("");
        TFCPF.setText("");
        TFCidade.setText("");
        TFVlrTaxaEntrega.setText("");
        CBRegiao.setSelectedItem("                                             " + "0");
        PreencherJtableTelefones();
    }

    private void DeletaCliente() {

        //
        if (!TFcodCli.getText().isEmpty()) {
            String id_cliente = TFcodCli.getText().isEmpty() ? "0" : TFcodCli.getText();
            ResultSet rscliente = FMaster.con.executeSQL("select * from dlcliente where id_cliente = '" + id_cliente + "'");
            try {
                rscliente.first();
                if (rscliente.isFirst()) {
                    rscliente.absolute(rscliente.getRow());
                    rscliente.deleteRow();
                    LimpaCampos();
                    PreencherJtableConsulta();
                } else {
                    JOptionPane.showMessageDialog(null, "Um cliente deve ser informada!", "Alerta", JOptionPane.ERROR_MESSAGE);
                }
                rscliente.close();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Não foi possível excluir o cliente!", "Alerta", JOptionPane.ERROR_MESSAGE);
            }
        }
        //
    }

    private void PreencherJtableConsulta() {
        ResultSet rsCliente = FMaster.con.executeSQL("select * from dlcliente " + Filtra() + " order by id_cliente");
        DefaultTableModel modelo = (DefaultTableModel) TbPadrao.getModel();
        modelo.setNumRows(0);
        try {
            while (rsCliente.next()) {
                modelo.addRow(new Object[]{rsCliente.getInt("id_cliente"), rsCliente.getString("nome"), rsCliente.getString("rua"), rsCliente.getInt("numero"), rsCliente.getString("bairro")});
            }
            rsCliente.close();
        } catch (SQLException ex) {
            Logger.getLogger(IFProduto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private String Filtra() {

        String descricao = TFDESCGERAL.getText().isEmpty() ? "" : TFDESCGERAL.getText();
        String filtro = "";
        if (!descricao.equals("")) {
            if (filtro.equals("")) {
                filtro = " where Upper(nome) like '%" + descricao.toUpperCase() + "%'";
            } else {
                filtro = filtro + " and Upper(nome) like '%" + descricao.toUpperCase() + "%'";
            }
        }
        return filtro;
    }

    private void posicionaProduto() {
        String id_cliente = Utilitario.getValueColumn("Código", TbPadrao);
        prencherHeder(Integer.parseInt(id_cliente));
        jTabbedPane1.setSelectedIndex(0);
        SetaValorTaxaEntrega();
    }

    private void PreencheComboRegioes() {
        ResultSet rsRegioes = FMaster.con.executeSQL("select * from dlregiao order by descricao");
        try {
            CBRegiao.addItem("                                             " + "0");
            rsRegioes.first();
            do {
                CBRegiao.addItem(rsRegioes.getString("descricao") + "                                             " + rsRegioes.getString("id_regiao"));
            } while (rsRegioes.next());
            rsRegioes.close();
        } catch (SQLException ex) {
            Logger.getLogger(IFCliente.class.getName()).log(Level.SEVERE, null, ex);
        }


    }

    private void SetaValorTaxaEntrega() {
        String id_regiao = "";
        id_regiao = CBRegiao.getSelectedItem().toString().substring(CBRegiao.getSelectedItem().toString().length() - 1, CBRegiao.getSelectedItem().toString().length());
        ResultSet rsRegioes = FMaster.con.executeSQL("select * from dlregiao where id_regiao = '" + id_regiao + "'");
        try {
            rsRegioes.first();
            if (rsRegioes.isFirst()) {
                TFVlrTaxaEntrega.setText(Utilitario.getFomatDecimal(rsRegioes.getFloat("taxa_entrega")));
                TFVlrTaxaEntrega.setEditable(false);
            } else {
                TFVlrTaxaEntrega.setEditable(true);
            }
            rsRegioes.close();
        } catch (SQLException ex) {
            Logger.getLogger(IFCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void SalvarTelefone() {
        if (!TFcodCli.getText().isEmpty()) {
            if (tfTelefone.getText().replace("(", "").replace(")", "").replace("-", "").trim().equals("")) {
                JOptionPane.showMessageDialog(null, "Informe o telefone!", "Alerta", JOptionPane.ERROR_MESSAGE);
                return;
            }
            ResultSet rsTelefone = FMaster.con.executeSQL("select * from dltelefonecliente where telefone = ''");
            try {
                rsTelefone.first();
                rsTelefone.moveToInsertRow();
                rsTelefone.updateInt("id_cliente", Integer.parseInt(TFcodCli.getText().isEmpty() ? "0" : TFcodCli.getText()));
                rsTelefone.updateString("telefone", tfTelefone.getText().replace("(", "").replace(")", "").replace("-", ""));
                rsTelefone.insertRow();
                rsTelefone.close();
                PreencherJtableTelefones();
                tfTelefone.setText("");
            } catch (SQLException ex) {
                Logger.getLogger(IFCliente.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public void PreencherJtableTelefones() {
        String id_cliente = TFcodCli.getText().isEmpty() ? "0" : TFcodCli.getText();
        ResultSet rsTelefones = FMaster.con.executeSQL("select * from dltelefonecliente where id_cliente = '" + id_cliente + "'");
        DefaultTableModel modelo = (DefaultTableModel) TbTelefone.getModel();
        modelo.setNumRows(0);
        try {
            while (rsTelefones.next()) {
                modelo.addRow(new Object[]{rsTelefones.getInt("id_cliente"), Utilitario.FormataFone(rsTelefones.getString("telefone"))});
            }
            rsTelefones.close();
        } catch (SQLException ex) {
            Logger.getLogger(IFProduto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void ExluiTelefone() {
        if (TbTelefone.getSelectedRow() != -1) {
            String id_cliente = Utilitario.getValueColumn("id_cliente", TbTelefone);
            String telefone = Utilitario.getValueColumn("Lista de Telefones", TbTelefone).replace("(", "").replace(")", "").replace("-", "");
            FMaster.con.executeUpdate("delete from dltelefonecliente where id_cliente = '" + id_cliente + "' and telefone = '" + telefone + "'");
            PreencherJtableTelefones();
        }
    }

    private void LimpaCamposSelecao() {
        TFDESCGERAL.setText("");
    }

    private void GetCepWeb() {
        if (TFRua.getText().isEmpty() && TFBairro.getText().isEmpty() && TFCidade.getText().isEmpty()) {
            String cep = TFCep1.getText().replace(".", "").replace("-", "");
            CepWebService cepWebService = new CepWebService(cep);
            if (TFRua.getText().isEmpty() && !cepWebService.getTipo_logradouro().isEmpty()) {
                TFRua.setText(cepWebService.getTipo_logradouro() + " " + cepWebService.getLogradouro());
            }
            if (TFBairro.getText().isEmpty()) {
                TFBairro.setText(cepWebService.getBairro());
            }
            if (TFCidade.getText().isEmpty()) {
                TFCidade.setText(cepWebService.getCidade());
            }
            String uf = cepWebService.getEstado();
            System.out.println(uf);
            CBEstado.setSelectedItem(uf);

        }
    }
//   private void PreencherJtable(String sFiltro) {
//        if (sFiltro.isEmpty()) {
//            rscliente = FMaster.con.executeSQL("select * from dlcliente");
//        } else {
//            rscliente = FMaster.con.executeSQL("select * from dlcliente where " + sFiltro);
//        }
//
//        DefaultTableModel modelo = (DefaultTableModel) TbPadrao.getModel();
//        modelo.setNumRows(0);
//        try {
//            while (rscliente.next()) {
//                modelo.addRow(new Object[]{rscliente.getRow(), rscliente.getInt("id_cliente"), rscliente.getString("nome"), rscliente.getString("rua"),rscliente.getInt("numero"),rscliente.getString("bairro"),rscliente.getString("cep"),rscliente.getString("obs")});
//            }
//        } catch (SQLException ex) {
//            //Logger.getLogger(IFProduto.class.getName()).log(Level.SEVERE, null, ex);
//        }
//    }
//    private void prencherHeder() {
//
//    }
//    /**
//     * @author Maicol
//     * Limpa campos da tela
//     */
//    private void LimpaCampos() {
//     TFBairro.setText("");
//     TFCPF.setText("");
//     TFNome.setText("");
//     TFRua.setText("");
//     TFcodigo.setText("");
//     TAObs.setText("");
//
//    }
    /**
     * @Author Maicol
     * Método de filtro.
     * Filtrar todas a colunas da tabela.
     */
//    private void Filtra() {
//        String sCod_Ini = TFCod_Ini.getText();
//        String sCod_Fin = TFCod_Fin.getText();
//        String sFiltro = "";
//
//        if (!sCod_Ini.equals("")) {
//            sFiltro = (" id_cliente>=" + sCod_Ini);
//        }
//        if (!sCod_Fin.equals("")) {
//            if (!sFiltro.equals("")) {
//                sFiltro = (sFiltro + " AND");
//            }
//            sFiltro = (sFiltro + " id_cliente<=" + sCod_Fin);
//        }
//
//
//        if (!TFDESCGERAL.getText().isEmpty()) {
//            ResultSetMetaData rsmd;
//            try {
//                rsmd = rscliente.getMetaData();
//                int numcols = rsmd.getColumnCount();
//                for (int i = 2 ; i <= numcols; i++) {
//                   if(!sFiltro.isEmpty()) sFiltro = sFiltro+" or ";
//                   if ((rsmd.getColumnType(i) !=12) && (rsmd.getColumnType(i) != 1)){
//                        sFiltro =sFiltro+"  CAST("+rsmd.getColumnLabel(i)+" AS VARCHAR)";
//                   } else sFiltro =sFiltro+rsmd.getColumnLabel(i);
//                    sFiltro = sFiltro+" Like '%"+TFDESCGERAL.getText()+"%' ";
//                }
//            } catch (SQLException ex) {
//                Logger.getLogger(IFCliente.class.getName()).log(Level.SEVERE, null, ex);
//            }
//         }
//        if (!sFiltro.equals("")) {
//            sFiltro = (sFiltro + "ORDER BY id_cliente");
//        }
//
//        PreencherJtable(sFiltro);
//
//    }
//    private void LimpaCamposSelecao() {
//        TFDESCGERAL.setText("");
//        TFCod_Fin.setText("");
//        TFCod_Ini.setText("");
//    }
}
