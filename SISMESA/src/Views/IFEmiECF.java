/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * IFEmiECF.java
 *
 * Created on 26/04/2011, 22:24:01
 */
package Views;

import classess.Utilitario;
import Classes.bematech.BemaECF;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author Valdemir
 */
public class IFEmiECF extends javax.swing.JInternalFrame {

    Object[] options = {"Sim", "Não"};

    /** Creates new form IFEmiECF */
    public IFEmiECF() {
        initComponents();
        //redimenciona o lookandFeeld de acordo com o selecionado
        SwingUtilities.updateComponentTreeUI(this);
        this.pack();
        TF_DTComandaIni.setText(Utilitario.getDataAtual());
        TF_DTComandaFin.setText(Utilitario.getDataAtual());
        TF_DTDeliveryIni.setText(Utilitario.getDataAtual());
        TF_DTDeliveryFin.setText(Utilitario.getDataAtual());

        PreencherJtableComanda();
        PreencherJtableDelivery();

        final JTableHeader heder = TBEmissaoECFComanda.getTableHeader();
        heder.addMouseListener(new MouseAdapter() {

            @Override
            public void mouseClicked(MouseEvent e) {
                String nomeColuna = (String) TBEmissaoECFComanda.getColumnModel().getColumn(heder.columnAtPoint(e.getPoint())).getIdentifier();

                if (nomeColuna.equals("Sel")) {
                    int qtdeLinha = TBEmissaoECFComanda.getRowCount();
                    ResultSet rsComanda = FMaster.con.executeSQL("select count(*)as cont from atncomanda " + FiltraComanda() + " and atncomanda.selecao_cf = 1");
                    try {
                        rsComanda.first();
                        if (rsComanda.isFirst()) {
                            if (qtdeLinha != rsComanda.getInt("cont")) {
                                MarcaTodosCheckBoxComanda();
                                PreencherJtableComanda();
                            } else {
                                DesmarcaTodosCheckBoxComanda();
                                PreencherJtableComanda();
                            }
                        }
                        rsComanda.close();
                    } catch (SQLException ex) {
                        Logger.getLogger(IFEmiECF.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            }
        });

        final JTableHeader heder2 = TBEmissaoECFDelivery.getTableHeader();
        heder2.addMouseListener(new MouseAdapter() {

            @Override
            public void mouseClicked(MouseEvent e) {
                String nomeColuna = (String) TBEmissaoECFDelivery.getColumnModel().getColumn(heder2.columnAtPoint(e.getPoint())).getIdentifier();

                if (nomeColuna.equals("Sel")) {
                    int qtdeLinha = TBEmissaoECFDelivery.getRowCount();
                    ResultSet rsDelivery = FMaster.con.executeSQL("select count(*)as cont from dldelivery inner join cxaitemcaixa on cxaitemcaixa.id_delivery = dldelivery.id_delivery " + FiltraDelivery() + " and dldelivery.selecao_cf = 1 and cxaitemcaixa.tipo_movimento = 2");
                    try {
                        rsDelivery.first();
                        if (rsDelivery.isFirst()) {
                            if (qtdeLinha != rsDelivery.getInt("cont")) {
                                MarcaTodosCheckBoxDelivery();
                                PreencherJtableDelivery();
                            } else {
                                DesmarcaTodosCheckBoxDelivery();
                                PreencherJtableDelivery();
                            }
                        }
                        rsDelivery.close();
                    } catch (SQLException ex) {
                        Logger.getLogger(IFEmiECF.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        LB_DTIni = new javax.swing.JLabel();
        TF_DTComandaIni = new javax.swing.JFormattedTextField();
        LB_DTFin = new javax.swing.JLabel();
        TF_DTComandaFin = new javax.swing.JFormattedTextField();
        BTProcessComanda = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TBEmissaoECFComanda = new javax.swing.JTable();
        BTEmiteEcfComanda = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        TF_DTDeliveryIni = new javax.swing.JFormattedTextField();
        LB_DTDeliveryIni = new javax.swing.JLabel();
        TF_DTDeliveryFin = new javax.swing.JFormattedTextField();
        LB_DTDeliveryFin = new javax.swing.JLabel();
        BTProcessDelivery = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TBEmissaoECFDelivery = new javax.swing.JTable();
        BTEmiteEcfDelivery = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Emissão de Cupom Fiscal");
        setMinimumSize(new java.awt.Dimension(737, 490));

        LB_DTIni.setText("Data Inicial:");

        try {
            TF_DTComandaIni.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        TF_DTComandaIni.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TF_DTComandaIniFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TF_DTComandaIniFocusLost(evt);
            }
        });

        LB_DTFin.setText("Data Final:");

        try {
            TF_DTComandaFin.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        TF_DTComandaFin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TF_DTComandaFinFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TF_DTComandaFinFocusLost(evt);
            }
        });

        BTProcessComanda.setText("Processar");
        BTProcessComanda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTProcessComandaActionPerformed(evt);
            }
        });

        TBEmissaoECFComanda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Sel", "Comanda", "Data", "Vlr Total", "Vlr Pago", "Vlr Receb.", "Vlr Acrés.", "Vlr Desc.", "Vlr Troco", "Tipo Pag"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TBEmissaoECFComanda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TBEmissaoECFComandaMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                TBEmissaoECFComandaMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(TBEmissaoECFComanda);
        TBEmissaoECFComanda.getColumnModel().getColumn(0).setMinWidth(40);
        TBEmissaoECFComanda.getColumnModel().getColumn(0).setPreferredWidth(40);

        BTEmiteEcfComanda.setText("Emitir Cupom Fiscal");
        BTEmiteEcfComanda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTEmiteEcfComandaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BTEmiteEcfComanda, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(LB_DTIni)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TF_DTComandaIni, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LB_DTFin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TF_DTComandaFin, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BTProcessComanda, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 716, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LB_DTIni)
                    .addComponent(TF_DTComandaIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TF_DTComandaFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LB_DTFin)
                    .addComponent(BTProcessComanda))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BTEmiteEcfComanda))
        );

        jTabbedPane1.addTab("Comanda", jPanel1);

        try {
            TF_DTDeliveryIni.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        TF_DTDeliveryIni.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TF_DTDeliveryIniFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TF_DTDeliveryIniFocusLost(evt);
            }
        });

        LB_DTDeliveryIni.setText("Data Inicial:");

        try {
            TF_DTDeliveryFin.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        TF_DTDeliveryFin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TF_DTDeliveryFinFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TF_DTDeliveryFinFocusLost(evt);
            }
        });

        LB_DTDeliveryFin.setText("Data Final:");

        BTProcessDelivery.setText("Processar");
        BTProcessDelivery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTProcessDeliveryActionPerformed(evt);
            }
        });

        TBEmissaoECFDelivery.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Sel", "Delivery", "Data", "Vlr Total", "Vlr Pago", "Vlr Receb.", "Vlr Acrés.", "Vlr Desc.", "Vlr Troco", "Tipo Pag"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TBEmissaoECFDelivery.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TBEmissaoECFDeliveryMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                TBEmissaoECFDeliveryMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(TBEmissaoECFDelivery);
        TBEmissaoECFDelivery.getColumnModel().getColumn(0).setMinWidth(40);
        TBEmissaoECFDelivery.getColumnModel().getColumn(0).setPreferredWidth(40);

        BTEmiteEcfDelivery.setText("Emitir Cupom Fiscal");
        BTEmiteEcfDelivery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTEmiteEcfDeliveryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(LB_DTDeliveryIni)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TF_DTDeliveryIni, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LB_DTDeliveryFin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TF_DTDeliveryFin, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BTProcessDelivery, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(252, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(580, Short.MAX_VALUE)
                .addComponent(BTEmiteEcfDelivery)
                .addGap(19, 19, 19))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 722, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LB_DTDeliveryIni)
                    .addComponent(TF_DTDeliveryIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TF_DTDeliveryFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LB_DTDeliveryFin)
                    .addComponent(BTProcessDelivery))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 352, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(BTEmiteEcfDelivery))
        );

        jTabbedPane1.addTab("Delivery", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 721, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        setBounds(100, 50, 737, 490);
    }// </editor-fold>//GEN-END:initComponents

    private void TF_DTComandaIniFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TF_DTComandaIniFocusGained
        TF_DTComandaIni.selectAll();
}//GEN-LAST:event_TF_DTComandaIniFocusGained

    private void TF_DTComandaIniFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TF_DTComandaIniFocusLost
        if (TF_DTComandaIni.getText().replaceAll("/", "").trim().equalsIgnoreCase("")) {
            TF_DTComandaIni.setText("00000000");
        }

}//GEN-LAST:event_TF_DTComandaIniFocusLost

    private void TF_DTComandaFinFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TF_DTComandaFinFocusGained
        TF_DTComandaFin.selectAll();
}//GEN-LAST:event_TF_DTComandaFinFocusGained

    private void TF_DTComandaFinFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TF_DTComandaFinFocusLost
        if (TF_DTComandaFin.getText().replaceAll("/", "").trim().equalsIgnoreCase("")) {
            TF_DTComandaFin.setText("00000000");
        }

}//GEN-LAST:event_TF_DTComandaFinFocusLost

    private void TBEmissaoECFComandaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TBEmissaoECFComandaMouseReleased
        
    }//GEN-LAST:event_TBEmissaoECFComandaMouseReleased

    private void BTProcessComandaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTProcessComandaActionPerformed
        PreencherJtableComanda();
    }//GEN-LAST:event_BTProcessComandaActionPerformed

    private void BTEmiteEcfComandaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTEmiteEcfComandaActionPerformed
        EmiteECFComanda();
    }//GEN-LAST:event_BTEmiteEcfComandaActionPerformed

    private void TF_DTDeliveryIniFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TF_DTDeliveryIniFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_DTDeliveryIniFocusGained

    private void TF_DTDeliveryIniFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TF_DTDeliveryIniFocusLost
        if (TF_DTDeliveryIni.getText().replaceAll("/", "").trim().equalsIgnoreCase("")) {
            TF_DTDeliveryIni.setText("00000000");
        }
    }//GEN-LAST:event_TF_DTDeliveryIniFocusLost

    private void TF_DTDeliveryFinFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TF_DTDeliveryFinFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_DTDeliveryFinFocusGained

    private void TF_DTDeliveryFinFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TF_DTDeliveryFinFocusLost
        if (TF_DTDeliveryFin.getText().replaceAll("/", "").trim().equalsIgnoreCase("")) {
            TF_DTDeliveryFin.setText("00000000");
        }
    }//GEN-LAST:event_TF_DTDeliveryFinFocusLost

    private void BTProcessDeliveryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTProcessDeliveryActionPerformed
        PreencherJtableDelivery();
    }//GEN-LAST:event_BTProcessDeliveryActionPerformed

    private void TBEmissaoECFDeliveryMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TBEmissaoECFDeliveryMouseReleased
        
    }//GEN-LAST:event_TBEmissaoECFDeliveryMouseReleased

    private void TBEmissaoECFDeliveryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TBEmissaoECFDeliveryMouseClicked
        SelecionaUnicoItemCheckBoxDelivery();
    }//GEN-LAST:event_TBEmissaoECFDeliveryMouseClicked

    private void BTEmiteEcfDeliveryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTEmiteEcfDeliveryActionPerformed
        EmiteECFDelivery();
    }//GEN-LAST:event_BTEmiteEcfDeliveryActionPerformed

    private void TBEmissaoECFComandaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TBEmissaoECFComandaMouseClicked
        SelecionaUnicoItemCheckBoxComanda();
}//GEN-LAST:event_TBEmissaoECFComandaMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTEmiteEcfComanda;
    private javax.swing.JButton BTEmiteEcfDelivery;
    private javax.swing.JButton BTProcessComanda;
    private javax.swing.JButton BTProcessDelivery;
    private javax.swing.JLabel LB_DTDeliveryFin;
    private javax.swing.JLabel LB_DTDeliveryIni;
    private javax.swing.JLabel LB_DTFin;
    private javax.swing.JLabel LB_DTIni;
    private javax.swing.JTable TBEmissaoECFComanda;
    private javax.swing.JTable TBEmissaoECFDelivery;
    private javax.swing.JFormattedTextField TF_DTComandaFin;
    private javax.swing.JFormattedTextField TF_DTComandaIni;
    private javax.swing.JFormattedTextField TF_DTDeliveryFin;
    private javax.swing.JFormattedTextField TF_DTDeliveryIni;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables

    private String FiltraComanda() {
        Date dDtIni = (java.sql.Date) Utilitario.getPegaDataSql(TF_DTComandaIni.getText().equals("00/00/0000") ? "" : (TF_DTComandaIni.getText()));
        Date dDtFin = (java.sql.Date) Utilitario.getPegaDataSql(TF_DTComandaFin.getText().equals("00/00/0000") ? "" : (TF_DTComandaFin.getText()));
        String sFiltro = "";
        //Datas
        if (dDtIni != null) {
            if (sFiltro.equals("")) {
                sFiltro = " where cast(data as date) >= '" + dDtIni + "'";
            } else {
                sFiltro = sFiltro + " and cast(data as date) >= '" + dDtIni + "'";
            }
        }
        if (dDtFin != null) {
            if (sFiltro.equals("")) {
                sFiltro = " where cast(data as date) <= '" + dDtFin + "'";
            } else {
                sFiltro = sFiltro + " and cast(data as date) <= '" + dDtFin + "'";
            }
        }

        if (sFiltro.equals("")) {
            sFiltro = " where gerado_cf = 0";
        } else {
            sFiltro = sFiltro + " and gerado_cf = 0";
        }

        if (sFiltro.equals("")) {
            sFiltro = " where situacao = 2";
        } else {
            sFiltro = sFiltro + " and situacao = 2";
        }
        return sFiltro;
    }

    private void PreencherJtableComanda() {
        String sTipoPG = "";
        ResultSet rsComanda = null;

        rsComanda = FMaster.con.executeSQL("select * from atncomanda  " + FiltraComanda() + " and exists(select * from cxaitemcaixa  where cxaitemcaixa.id_comanda = atncomanda.id_comanda) order by atncomanda.id_comanda");

        DefaultTableModel Balcao = (DefaultTableModel) TBEmissaoECFComanda.getModel();
        Balcao.setNumRows(0);
        try {
            while (rsComanda.next()) {
                int iTipoPG = 0;
                ResultSet rsTipoLancamento = FMaster.con.executeSQL("select * from cxaitemcaixa  where id_comanda = '" + rsComanda.getInt("id_comanda") + "'  and tipo_movimento = 2 order by idp desc limit 1");
                rsTipoLancamento.first();
                if (rsTipoLancamento.isFirst()) {
                    iTipoPG = rsTipoLancamento.getInt("tipo_lancamento");
                }
                rsTipoLancamento.close();
                if (iTipoPG == 1) {
                    sTipoPG = "Dinheiro";
                } else if (iTipoPG == 2) {
                    sTipoPG = "Cartão Débito";
                } else if (iTipoPG == 3) {
                    sTipoPG = "Cartão Crédito";
                } else if (iTipoPG == 4) {
                    sTipoPG = "Cheque";
                }
                Balcao.addRow(new Object[]{rsComanda.getBoolean("selecao_cf"), rsComanda.getInt("id_comanda"), Utilitario.FormatDate(rsComanda.getDate("data")), Utilitario.getFomatDecimal(rsComanda.getFloat("vlr_total")), Utilitario.getFomatDecimal(rsComanda.getFloat("vlr_pago")), Utilitario.getFomatDecimal(rsComanda.getFloat("vlr_recebido")), Utilitario.getFomatDecimal(rsComanda.getFloat("vlr_acrescimo")), Utilitario.getFomatDecimal(rsComanda.getFloat("vlr_desconto")), Utilitario.getFomatDecimal(rsComanda.getFloat("vlr_troco")), sTipoPG});

            }
            rsComanda.close();
        } catch (SQLException ex) {
            Logger.getLogger(IFEmiECF.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void SelecionaUnicoItemCheckBoxComanda() {
        if (TBEmissaoECFComanda.getSelectedRow() >= 0) {
            int selecao;
            //
            String id_comanda = Utilitario.getValueColumn("Comanda", TBEmissaoECFComanda);
            //

            //
            boolean selecionado = Boolean.valueOf(Utilitario.getValueColumn("Sel", TBEmissaoECFComanda));
            //

            //
            if (selecionado == true) {
                selecao = 1;
            } else {
                selecao = 0;
            }
            //

            //
            FMaster.con.executeUpdate("Update atncomanda set selecao_cf = " + selecao + " where id_comanda = '" + id_comanda + "'");
            //

            //
            ResultSet rsSelecao = FMaster.con.executeSQL("select * from atncomanda where id_comanda = '" + id_comanda + "'");
            try {
                rsSelecao.first();
                if (rsSelecao.isFirst()) {
                    TBEmissaoECFComanda.setValueAt(rsSelecao.getBoolean("selecao_cf"), TBEmissaoECFComanda.getSelectedRow(), Utilitario.getIndiceColumn("Sel", TBEmissaoECFComanda));
                }
            } catch (Exception e) {
                Logger.getLogger(IFEmiECF.class.getName()).log(Level.SEVERE, null, e);
            } finally {
                try {
                    rsSelecao.close();
                } catch (SQLException ex) {
                    Logger.getLogger(IFEmiECF.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    private void SelecionaUnicoItemCheckBoxDelivery() {
        if (TBEmissaoECFDelivery.getSelectedRow() >= 0) {
            int selecao;
            //
            String id_delivery = Utilitario.getValueColumn("Delivery", TBEmissaoECFDelivery);
            //

            //
            boolean selecionado = Boolean.valueOf(Utilitario.getValueColumn("Sel", TBEmissaoECFDelivery));
            //

            //
            if (selecionado == true) {
                selecao = 1;
            } else {
                selecao = 0;
            }
            //

            //
            FMaster.con.executeUpdate("Update dldelivery set selecao_cf = " + selecao + " where id_delivery = '" + id_delivery + "'");
            //

            //
            ResultSet rsSelecao = FMaster.con.executeSQL("select * from dldelivery where id_delivery = '" + id_delivery + "'");
            try {
                rsSelecao.first();
                if (rsSelecao.isFirst()) {
                    TBEmissaoECFDelivery.setValueAt(rsSelecao.getBoolean("selecao_cf"), TBEmissaoECFDelivery.getSelectedRow(), Utilitario.getIndiceColumn("Sel", TBEmissaoECFDelivery));
                }
            } catch (Exception e) {
                Logger.getLogger(IFEmiECF.class.getName()).log(Level.SEVERE, null, e);
            } finally {
                try {
                    rsSelecao.close();
                } catch (SQLException ex) {
                    Logger.getLogger(IFEmiECF.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    private void MarcaTodosCheckBoxComanda() {
        FMaster.con.executeUpdate("Update atncomanda set selecao_cf = 1 " + FiltraComanda() + " and exists(select * from cxaitemcaixa  where cxaitemcaixa.id_comanda = atncomanda.id_comanda)");
    }

    private void MarcaTodosCheckBoxDelivery() {
        FMaster.con.executeUpdate("Update dldelivery set selecao_cf = 1 " + FiltraDelivery() + " and exists(select * from cxaitemcaixa where cxaitemcaixa.id_delivery = dldelivery.id_delivery and cxaitemcaixa.tipo_movimento = 2)");
    }

    private void DesmarcaTodosCheckBoxComanda() {
        FMaster.con.executeUpdate("Update atncomanda set selecao_cf = 0 " + FiltraComanda() + " and exists(select * from cxaitemcaixa  where cxaitemcaixa.id_comanda = atncomanda.id_comanda)");
    }

    private void DesmarcaTodosCheckBoxDelivery() {
        FMaster.con.executeUpdate("Update dldelivery set selecao_cf = 0 " + FiltraDelivery() + " and exists(select * from cxaitemcaixa where cxaitemcaixa.id_delivery = dldelivery.id_delivery and cxaitemcaixa.tipo_movimento = 2)");
    }

    private void EmiteECFComanda() {
        ResultSet rsComanda = FMaster.con.executeSQL("select * from atncomanda " + FiltraComanda() + " and  atncomanda.selecao_cf = 1 and exists(select * from cxaitemcaixa  where cxaitemcaixa.id_comanda = atncomanda.id_comanda) order by atncomanda.id_comanda");
        try {
            rsComanda.first();
            if (rsComanda.isFirst()) {
                int iresp = JOptionPane.showOptionDialog(null, "Deseja Imprimir Cupom Fiscal?", "", JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE,
                        null, //do not use a custom Icon
                        options, //the titles of buttons
                        options[0]); //default button title
                if (iresp == 0) {
                    String Aliquota = "";
                    ResultSet rsAliquota = FMaster.con.executeSQL("select * from atnconfigecf");
                    rsAliquota.first();
                    if (rsAliquota.isFirst()) {
                        Aliquota = rsAliquota.getString("vlr_aliquota");
                    }
                    rsAliquota.close();
                    do {
                        String TipoAcrescimoDesconto = "$";
                        String sAcrescimoDesconto = "D";
                        String ValorAcrescimoDesconto = "0";
                        float fAcrescimoDesconto = rsComanda.getFloat("vlr_desconto");
                        if (fAcrescimoDesconto != 0) {
                            sAcrescimoDesconto = "D";
                            ValorAcrescimoDesconto = Utilitario.getFomatDecimal(fAcrescimoDesconto);
                        }
                        fAcrescimoDesconto = rsComanda.getFloat("vlr_acrescimo");
                        if (fAcrescimoDesconto != 0) {
                            sAcrescimoDesconto = "A";
                            ValorAcrescimoDesconto = Utilitario.getFomatDecimal(fAcrescimoDesconto);
                        }

                        String formaPagamento = "";
                        int iTipoPG = 0;
                        ResultSet rsTipoLancamento = FMaster.con.executeSQL("select * from cxaitemcaixa  where id_comanda = '" + rsComanda.getInt("id_comanda") + "'  and tipo_movimento = 2 order by idp desc limit 1");
                        rsTipoLancamento.first();
                        if (rsTipoLancamento.isFirst()) {
                            iTipoPG = rsTipoLancamento.getInt("tipo_lancamento");
                        }
                        rsTipoLancamento.close();

                        if (iTipoPG == 1) {
                            formaPagamento = "Dinheiro";
                        } else if (iTipoPG == 2) {
                            formaPagamento = "Cartão Débito";
                        } else if (iTipoPG == 3) {
                            formaPagamento = "Cartão Crédito";
                        } else if (iTipoPG == 4) {
                            formaPagamento = "Cheque";
                        }

                        ResultSet rsComPro = FMaster.con.executeSQL("select * from atncompro inner join estproduto on estproduto.id_produto = atncompro.id_produto where atncompro.id_comanda = '" + rsComanda.getString("id_comanda") + "'");
                        rsComPro.first();
                        if (rsComPro.isFirst()) {
                            BemaECF.abreCupom();
                            do {
                                if (BemaECF.iRet == 0) {
                                    //System.out.println(rsItemBalcao.getInt("id_produto"));
                                    BemaECF.vendeItem(rsComPro.getString("id_produto"), rsComPro.getString("descricao"), Aliquota, "I", rsComPro.getString("qtde_pago"), 2, Utilitario.getFomatDecimal(rsComPro.getFloat("vlr_unitario")), "$", "00000000");
                                }
                            } while (rsComPro.next());
                            if (BemaECF.iRet == 0) {
                                FMaster.con.executeUpdate("update atncomanda set gerado_cf = 1 where atncomanda.id_comanda = '" + rsComanda.getInt("id_comanda") + "'");
                                BemaECF.fechaCupom(sAcrescimoDesconto, TipoAcrescimoDesconto, ValorAcrescimoDesconto, "Comanda de número: " + rsComanda.getInt("id_comanda"), formaPagamento, Utilitario.getFomatDecimal(rsComanda.getFloat("Vlr_recebido")));
                            }

                            Utilitario.SalvaUltimoCFGeradoComanda(rsComanda.getInt("id_comanda"));
                        }
                        rsComPro.close();
                    } while (rsComanda.next());
                }
            }
            rsComanda.close();
            PreencherJtableComanda();
        } catch (SQLException ex) {
            Logger.getLogger(IFEmiECF.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void EmiteECFDelivery() {
        ResultSet rsDelivery = FMaster.con.executeSQL("select * from dldelivery inner join cxaitemcaixa on cxaitemcaixa.id_delivery = dldelivery.id_delivery " + FiltraDelivery() + " and dldelivery.selecao_cf = 1 and cxaitemcaixa.tipo_movimento = 2");
        try {
            rsDelivery.first();
            if (rsDelivery.isFirst()) {
                int iresp = JOptionPane.showOptionDialog(null, "Deseja Imprimir Cupom Fiscal?", "", JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE,
                        null, //do not use a custom Icon
                        options, //the titles of buttons
                        options[0]); //default button title
                if (iresp == 0) {
                    String Aliquota = "";
                    ResultSet rsAliquota = FMaster.con.executeSQL("select * from atnconfigecf");
                    rsAliquota.first();
                    if (rsAliquota.isFirst()) {
                        Aliquota = rsAliquota.getString("vlr_aliquota");
                    }
                    rsAliquota.close();
                    do {

                        String TipoAcrescimoDesconto = "$";
                        String sAcrescimoDesconto = "D";
                        String ValorAcrescimoDesconto = "0";
                        float fAcrescimoDesconto = rsDelivery.getFloat("vlr_desconto");
                        if (fAcrescimoDesconto != 0) {
                            sAcrescimoDesconto = "D";
                            ValorAcrescimoDesconto = Utilitario.getFomatDecimal(fAcrescimoDesconto);
                        }
                        fAcrescimoDesconto = rsDelivery.getFloat("vlr_taxa_entrega");
                        if (fAcrescimoDesconto != 0) {
                            sAcrescimoDesconto = "A";
                            ValorAcrescimoDesconto = Utilitario.getFomatDecimal(fAcrescimoDesconto);
                        }


                        String formaPagamento = "";
                        if (rsDelivery.getInt("tipo_lancamento") == 1) {
                            formaPagamento = "Dinheiro";
                        } else if (rsDelivery.getInt("tipo_lancamento") == 2) {
                            formaPagamento = "Cartão Débito";
                        } else if (rsDelivery.getInt("tipo_lancamento") == 3) {
                            formaPagamento = "Cartão Crédito";
                        } else if (rsDelivery.getInt("tipo_lancamento") == 4) {
                            formaPagamento = "Cheque";
                        }


                        ResultSet rsItemDelyvery = FMaster.con.executeSQL("select * from dldeliveryitens inner join estproduto on estproduto.id_produto = dldeliveryitens.id_produto where dldeliveryitens.id_delivery = '" + rsDelivery.getString("id_delivery") + "'");
                        rsItemDelyvery.first();
                        if (rsItemDelyvery.isFirst()) {
                            BemaECF.abreCupom();
                            do {
                                if (BemaECF.iRet == 0) {
                                    //System.out.println(rsItemBalcao.getInt("id_produto"));
                                    BemaECF.vendeItem(rsItemDelyvery.getString("id_produto"), rsItemDelyvery.getString("descricao"), Aliquota, "I", rsItemDelyvery.getString("qtde"), 2, Utilitario.getFomatDecimal(rsItemDelyvery.getFloat("vlr_unit")), "$", "00000000");
                                }
                            } while (rsItemDelyvery.next());
                            if (BemaECF.iRet == 0) {
                                FMaster.con.executeUpdate("update dldelivery set gerado_cf = 1 where dldelivery.id_delivery = '" + rsDelivery.getInt("id_delivery") + "'");
                                BemaECF.fechaCupom(sAcrescimoDesconto, TipoAcrescimoDesconto, ValorAcrescimoDesconto, "Delivery de número: " + rsDelivery.getInt("id_delivery"), formaPagamento, Utilitario.getFomatDecimal(rsDelivery.getFloat("vlr_recebido")));
                            }
                            Utilitario.SalvaUltimoCFGeradoDelivery(rsDelivery.getInt("id_delivery"));
                        }
                        rsItemDelyvery.close();
                    } while (rsDelivery.next());
                }
            }
            rsDelivery.close();
            PreencherJtableDelivery();
        } catch (SQLException ex) {
            Logger.getLogger(IFEmiECF.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void PreencherJtableDelivery() {
        String sTipoPG = "";
        ResultSet rsDelivery = null;

        rsDelivery = FMaster.con.executeSQL("select * from dldelivery  inner join cxaitemcaixa on cxaitemcaixa.id_delivery = dldelivery.id_delivery " + FiltraDelivery() + " and cxaitemcaixa.tipo_movimento = 2 order by dldelivery.id_delivery");

        DefaultTableModel Balcao = (DefaultTableModel) TBEmissaoECFDelivery.getModel();
        Balcao.setNumRows(0);
        try {
            while (rsDelivery.next()) {
                if (rsDelivery.getInt("tipo_lancamento") == 1) {
                    sTipoPG = "Dinheiro";
                } else if (rsDelivery.getInt("tipo_lancamento") == 2) {
                    sTipoPG = "Cartão Débito";
                } else if (rsDelivery.getInt("tipo_lancamento") == 3) {
                    sTipoPG = "Cartão Crédito";
                } else if (rsDelivery.getInt("tipo_lancamento") == 4) {
                    sTipoPG = "Cheque";
                }
                Balcao.addRow(new Object[]{rsDelivery.getBoolean("selecao_cf"), rsDelivery.getInt("id_delivery"), Utilitario.FormatDate(rsDelivery.getDate("data_delivery")), Utilitario.getFomatDecimal(rsDelivery.getFloat("vlr_bruto")), Utilitario.getFomatDecimal(rsDelivery.getFloat("vlr_liquido")), Utilitario.getFomatDecimal(rsDelivery.getFloat("vlr_recebido")), Utilitario.getFomatDecimal(rsDelivery.getFloat("vlr_taxa_entrega")), Utilitario.getFomatDecimal(rsDelivery.getFloat("vlr_desconto")), Utilitario.getFomatDecimal(rsDelivery.getFloat("vlr_troco")), sTipoPG});

            }
            rsDelivery.close();
        } catch (SQLException ex) {
            Logger.getLogger(IFEmiECF.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private String FiltraDelivery() {
        Date dDtIni = (java.sql.Date) Utilitario.getPegaDataSql(TF_DTDeliveryIni.getText().equals("00/00/0000") ? "" : (TF_DTDeliveryIni.getText()));
        Date dDtFin = (java.sql.Date) Utilitario.getPegaDataSql(TF_DTDeliveryFin.getText().equals("00/00/0000") ? "" : (TF_DTDeliveryFin.getText()));
        String sFiltro = "";
        //Datas
        if (dDtIni != null) {
            if (sFiltro.equals("")) {
                sFiltro = " where cast(data_delivery as date) >= '" + dDtIni + "'";
            } else {
                sFiltro = sFiltro + " and cast(data_delivery as date) >= '" + dDtIni + "'";
            }
        }
        if (dDtFin != null) {
            if (sFiltro.equals("")) {
                sFiltro = " where cast(data_delivery as date) <= '" + dDtFin + "'";
            } else {
                sFiltro = sFiltro + " and cast(data_delivery as date) <= '" + dDtFin + "'";
            }
        }

        if (sFiltro.equals("")) {
            sFiltro = " where gerado_cf = 0";
        } else {
            sFiltro = sFiltro + " and gerado_cf = 0";
        }

        if (sFiltro.equals("")) {
            sFiltro = " where situacao = 3";
        } else {
            sFiltro = sFiltro + " and situacao = 3";
        }
        return sFiltro;
    }
}
