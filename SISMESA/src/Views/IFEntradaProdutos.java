/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * IFEntradaProdutos.java
 *
 * Created on 01/12/2010, 19:07:23
 */
package Views;

import classess.MovimentoEstoque;
import classess.Utilitario;
import View_consulta.DLFornecedor;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.InputVerifier;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Demir
 */
public class IFEntradaProdutos extends javax.swing.JInternalFrame {

    Object[] options = {"Sim", "Não"};

    /** Creates new form IFEntradaProdutos */
    public IFEntradaProdutos() {
        initComponents();
        //redimenciona o lookandFeeld de acordo com o selecionado
        SwingUtilities.updateComponentTreeUI(this);
        this.pack();
        HabilitaBtnInsereProduto();
        HabilitaBtnInsereAlteraProduto();

        TF_DTIni.setText(Utilitario.getDataAtual());
        TF_DTFin.setText(Utilitario.getDataAtual());

        PreencherJtableConsulta();

        TFCodFornecedor.setInputVerifier(new InputVerifier() {

            @Override
            public boolean verify(JComponent input) {
                JTextField texto = (JTextField) input;
                boolean valida = false;
                if (!texto.getText().isEmpty()) {
                    try {
                        ResultSet rsFornecedor = FMaster.con.executeSQL("select * from estfornecedor where id_fornecedor = '" + texto.getText() + "'");
                        rsFornecedor.first();
                        if (rsFornecedor.isFirst()) {
                            valida = true;
                        } else {
                            JOptionPane.showMessageDialog(null, "Forncedor não cadastrado!", "Alerta", JOptionPane.ERROR_MESSAGE);
                            valida = false;
                        }
                        rsFornecedor.close();
                    } catch (SQLException ex) {
                        Logger.getLogger(DLCadProdComanda.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    valida = true;
                }
                return valida;
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        TFVlrTotal = new javax.swing.JTextField();
        LBData = new javax.swing.JLabel();
        BTAlteraProduto = new javax.swing.JButton();
        BTInsereProduto = new javax.swing.JButton();
        BTExcluiProduto = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TBEntradaProduto = new javax.swing.JTable();
        TFCodFornecedor = new Componentes.DKJTFInteger();
        LBFornecedor1 = new javax.swing.JLabel();
        TFCodigo = new Componentes.DKJTFInteger();
        LBCodigo = new javax.swing.JLabel();
        LBData1 = new javax.swing.JLabel();
        TFData = new javax.swing.JTextField();
        LBFornecedor = new javax.swing.JLabel();
        TFDescFornecedor = new javax.swing.JTextField();
        TFSerie = new javax.swing.JTextField();
        LBSerie = new javax.swing.JLabel();
        TFNota = new Componentes.DKJTFInteger();
        LBNota = new javax.swing.JLabel();
        BTStatus = new javax.swing.JButton();
        BTLimpaComanda1 = new javax.swing.JButton();
        BTSalvar = new javax.swing.JButton();
        BTExcluiComada = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TBConsultaEntrada = new javax.swing.JTable();
        TFCodEntIni = new Componentes.DKJTFInteger();
        TFCodEntFIn = new Componentes.DKJTFInteger();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TF_DTIni = new javax.swing.JFormattedTextField();
        TF_DTFin = new javax.swing.JFormattedTextField();
        LBDataIni = new javax.swing.JLabel();
        LBDataFin = new javax.swing.JLabel();
        TFSerieIni = new javax.swing.JTextField();
        TFSerieFin = new javax.swing.JTextField();
        LBDataFin1 = new javax.swing.JLabel();
        LBDataFin2 = new javax.swing.JLabel();
        TFNotaIni = new Componentes.DKJTFInteger();
        TFNotaFin = new Componentes.DKJTFInteger();
        LBDataFin3 = new javax.swing.JLabel();
        LBDataFin4 = new javax.swing.JLabel();
        TFCodFornecedorIni = new Componentes.DKJTFInteger();
        TFCodFornecedorFin = new Componentes.DKJTFInteger();
        LBDataFin5 = new javax.swing.JLabel();
        LBDataFin6 = new javax.swing.JLabel();
        CBSituacao = new javax.swing.JComboBox();
        LBDataFin7 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Entrada de produtos");
        setMinimumSize(new java.awt.Dimension(708, 438));

        TFVlrTotal.setEditable(false);
        TFVlrTotal.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        TFVlrTotal.setForeground(new java.awt.Color(51, 51, 255));
        TFVlrTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        TFVlrTotal.setFocusable(false);

        LBData.setText("Valor Total");

        BTAlteraProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/1287690531_27-Edit Text.png"))); // NOI18N
        BTAlteraProduto.setText("Alterar produto");
        BTAlteraProduto.setPreferredSize(new java.awt.Dimension(125, 25));
        BTAlteraProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTAlteraProdutoActionPerformed(evt);
            }
        });
        BTAlteraProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BTAlteraProdutoKeyPressed(evt);
            }
        });

        BTInsereProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/new.png"))); // NOI18N
        BTInsereProduto.setText("Inserir produto");
        BTInsereProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTInsereProdutoActionPerformed(evt);
            }
        });
        BTInsereProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                BTInsereProdutoFocusGained(evt);
            }
        });
        BTInsereProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BTInsereProdutoKeyPressed(evt);
            }
        });

        BTExcluiProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/delete_16.png"))); // NOI18N
        BTExcluiProduto.setText("Excluir produto");
        BTExcluiProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTExcluiProdutoActionPerformed(evt);
            }
        });
        BTExcluiProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BTExcluiProdutoKeyPressed(evt);
            }
        });

        TBEntradaProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id_itementrada", "id_entrada", "Cód. Produto", "Descrição", "Unidade", "Quantidade", "Valor Unitário", "Valor Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TBEntradaProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TBEntradaProdutoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TBEntradaProduto);
        TBEntradaProduto.getColumnModel().getColumn(0).setMinWidth(0);
        TBEntradaProduto.getColumnModel().getColumn(0).setPreferredWidth(0);
        TBEntradaProduto.getColumnModel().getColumn(0).setMaxWidth(0);
        TBEntradaProduto.getColumnModel().getColumn(1).setMinWidth(0);
        TBEntradaProduto.getColumnModel().getColumn(1).setPreferredWidth(0);
        TBEntradaProduto.getColumnModel().getColumn(1).setMaxWidth(0);

        TFCodFornecedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TFCodFornecedorKeyPressed(evt);
            }
        });

        LBFornecedor1.setText("Fornecedor(F1)");

        TFCodigo.setEditable(false);
        TFCodigo.setFocusable(false);

        LBCodigo.setText("Código");

        LBData1.setText("Data");

        TFData.setEditable(false);
        TFData.setFocusable(false);

        LBFornecedor.setText("Descrição do fornecedor");

        TFDescFornecedor.setEditable(false);
        TFDescFornecedor.setFocusable(false);

        LBSerie.setText("Serie");

        LBNota.setText("Nota ");

        BTStatus.setText("...");
        BTStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTStatusActionPerformed(evt);
            }
        });
        BTStatus.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BTStatusKeyPressed(evt);
            }
        });

        BTLimpaComanda1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Clear-32.png"))); // NOI18N
        BTLimpaComanda1.setText("Limpar");
        BTLimpaComanda1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTLimpaComanda1ActionPerformed(evt);
            }
        });
        BTLimpaComanda1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BTLimpaComanda1KeyPressed(evt);
            }
        });

        BTSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/save_16.png"))); // NOI18N
        BTSalvar.setText("Salvar");
        BTSalvar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BTSalvarMouseClicked(evt);
            }
        });
        BTSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTSalvarActionPerformed(evt);
            }
        });
        BTSalvar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BTSalvarKeyPressed(evt);
            }
        });

        BTExcluiComada.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/delete_16.png"))); // NOI18N
        BTExcluiComada.setText("Excluir");
        BTExcluiComada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTExcluiComadaActionPerformed(evt);
            }
        });
        BTExcluiComada.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BTExcluiComadaKeyPressed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/search_16.png"))); // NOI18N
        jButton1.setFocusable(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LBData, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(TFVlrTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 115, Short.MAX_VALUE)
                                .addComponent(BTAlteraProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BTInsereProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BTExcluiProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(LBFornecedor1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(LBFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(TFCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(TFData, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(LBCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(40, 40, 40)
                                                .addComponent(LBData1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(LBSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(TFSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(LBNota, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(TFNota, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(TFCodFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, 0)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(TFDescFornecedor)))
                                .addGap(77, 77, 77)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(BTStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(BTLimpaComanda1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(BTSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(BTExcluiComada, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE))
                                .addGap(0, 8, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 667, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LBCodigo)
                            .addComponent(LBData1)
                            .addComponent(LBSerie)
                            .addComponent(LBNota))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TFCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TFData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TFSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TFNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LBFornecedor1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LBFornecedor))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TFCodFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TFDescFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(BTLimpaComanda1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(BTStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(BTExcluiComada, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(BTSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(LBData)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TFVlrTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(BTExcluiProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(BTInsereProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(BTAlteraProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        jTabbedPane1.addTab("Cadastro", jPanel1);

        TBConsultaEntrada.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id_entrada", "Cód. Entrada", "Data", "Série", "Nota", "Situação", "Fornecedor", "Descrição do forncedor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TBConsultaEntrada.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TBConsultaEntradaMouseClicked(evt);
            }
        });
        TBConsultaEntrada.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TBConsultaEntradaKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(TBConsultaEntrada);
        TBConsultaEntrada.getColumnModel().getColumn(0).setMinWidth(0);
        TBConsultaEntrada.getColumnModel().getColumn(0).setPreferredWidth(0);
        TBConsultaEntrada.getColumnModel().getColumn(0).setMaxWidth(0);

        TFCodEntIni.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TFCodEntIniFocusLost(evt);
            }
        });

        TFCodEntFIn.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TFCodEntFInFocusLost(evt);
            }
        });

        jLabel1.setText("Cód. Ent. Fin.");

        jLabel2.setText("Cód. Ent. Ini.");

        try {
            TF_DTIni.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        TF_DTIni.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TF_DTIniFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TF_DTIniFocusLost(evt);
            }
        });

        try {
            TF_DTFin.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        TF_DTFin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TF_DTFinFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TF_DTFinFocusLost(evt);
            }
        });

        LBDataIni.setText("Data Ini.");

        LBDataFin.setText("Situação");

        TFSerieIni.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TFSerieIniFocusLost(evt);
            }
        });

        TFSerieFin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TFSerieFinFocusLost(evt);
            }
        });

        LBDataFin1.setText("Data Fin.");

        LBDataFin2.setText("Nota Fin.");

        TFNotaIni.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TFNotaIniFocusLost(evt);
            }
        });

        TFNotaFin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TFNotaFinFocusLost(evt);
            }
        });

        LBDataFin3.setText("Série Ini.");

        LBDataFin4.setText("Nota Ini.");

        TFCodFornecedorIni.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TFCodFornecedorIniFocusLost(evt);
            }
        });

        TFCodFornecedorFin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TFCodFornecedorFinFocusLost(evt);
            }
        });

        LBDataFin5.setText("Série Fin.");

        LBDataFin6.setText("Fornec. Ini.");

        CBSituacao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todas", "Aberta", "Fechada" }));
        CBSituacao.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CBSituacaoItemStateChanged(evt);
            }
        });
        CBSituacao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CBSituacaoKeyPressed(evt);
            }
        });

        LBDataFin7.setText("Fornec. Fin.");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 677, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(LBDataIni, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(LBDataFin1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(LBDataFin3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(LBDataFin5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(LBDataFin4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(LBDataFin2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(TFCodEntIni, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(TFCodEntFIn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(TF_DTIni, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(TF_DTFin, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(TFSerieIni, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(TFSerieFin, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(TFNotaIni, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(TFNotaFin, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(LBDataFin6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(LBDataFin7, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(LBDataFin, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(TFCodFornecedorFin, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(TFCodFornecedorIni, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(CBSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(LBDataIni)
                    .addComponent(LBDataFin1)
                    .addComponent(LBDataFin3)
                    .addComponent(LBDataFin5)
                    .addComponent(LBDataFin4)
                    .addComponent(LBDataFin2))
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TFCodEntIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TFCodEntFIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TF_DTIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TF_DTFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TFSerieIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TFSerieFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TFNotaIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TFNotaFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LBDataFin6)
                    .addComponent(LBDataFin7)
                    .addComponent(LBDataFin))
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TFCodFornecedorFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TFCodFornecedorIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CBSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Pesquisar", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setBounds(100, 50, 708, 438);
    }// </editor-fold>//GEN-END:initComponents

    private void BTAlteraProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTAlteraProdutoActionPerformed
        int statusEntrada = StatusEntrada();
        if (statusEntrada == 1) {
            String id_itementrada = Utilitario.getValueColumn("id_itementrada", TBEntradaProduto);
            String id_entrada = Utilitario.getValueColumn("id_entrada", TBEntradaProduto);
            String id_produto = Utilitario.getValueColumn("Cód. Produto", TBEntradaProduto);
            DLCadItemEntrada cadItemEntrada = new DLCadItemEntrada(null, true, Integer.parseInt(id_itementrada), Integer.parseInt(id_entrada), Integer.parseInt(id_produto), 2, this);
            cadItemEntrada.setVisible(true);
            HabilitaBtnInsereAlteraProduto();
        }
}//GEN-LAST:event_BTAlteraProdutoActionPerformed

    private void BTAlteraProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BTAlteraProdutoKeyPressed
//        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
//            String comanda = Utilitario.getValueColumn("Comanda", TBProduto);
//            String cliente = Utilitario.getValueColumn("Cliente", TBProduto);
//            String produto = Utilitario.getValueColumn("Produto", TBProduto);
//            DLCadProdComanda cadastroProduto = new DLCadProdComanda(null, true, Integer.parseInt(comanda), Integer.parseInt(cliente), Integer.parseInt(produto), 2, this);
//            cadastroProduto.setVisible(true);
//            BTInsereProduto.requestFocus();
//        }
}//GEN-LAST:event_BTAlteraProdutoKeyPressed

    private void BTInsereProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTInsereProdutoActionPerformed
        int statusEntrada = StatusEntrada();
        if (statusEntrada == 1) {
            if (!TFCodigo.getText().isEmpty()) {
                int id_entrada = Integer.parseInt(TFCodigo.getText());
                DLCadItemEntrada cadItemEntrada = new DLCadItemEntrada(null, true, 0, id_entrada, 0, 1, this);
                cadItemEntrada.setVisible(true);
            }
            HabilitaBtnInsereAlteraProduto();
        }
}//GEN-LAST:event_BTInsereProdutoActionPerformed

    private void BTInsereProdutoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BTInsereProdutoFocusGained
        //   PreencheJtableProduto();
}//GEN-LAST:event_BTInsereProdutoFocusGained

    private void BTInsereProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BTInsereProdutoKeyPressed
//        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
//            String comanda = Utilitario.getValueColumn("Comanda", TBClientes);
//            String cliente = Utilitario.getValueColumn("CodCliente", TBClientes);
//            DLCadProdComanda cadastroProduto = new DLCadProdComanda(null, true, Integer.parseInt(comanda), Integer.parseInt(cliente), 0, 1, this);
//            cadastroProduto.setVisible(true);
//        }
}//GEN-LAST:event_BTInsereProdutoKeyPressed

    private void BTExcluiProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTExcluiProdutoActionPerformed
        int statusEntrada = StatusEntrada();
        if (statusEntrada == 1) {
            ExcluiProduto();
            HabilitaBtnInsereAlteraProduto();
        }
}//GEN-LAST:event_BTExcluiProdutoActionPerformed

    private void BTExcluiProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BTExcluiProdutoKeyPressed
//        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
//            ExcluiProduto();
//        }
}//GEN-LAST:event_BTExcluiProdutoKeyPressed

    private void BTStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTStatusActionPerformed
        FechaAbreEntrada();
        PreencherJtableConsulta();
}//GEN-LAST:event_BTStatusActionPerformed

    private void BTStatusKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BTStatusKeyPressed
//        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
//            LimparCamposHerder();
//        }
}//GEN-LAST:event_BTStatusKeyPressed

    private void BTExcluiComadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTExcluiComadaActionPerformed
        int statusEntrada = StatusEntrada();
        if (statusEntrada == 1) {
            DeletaEntrada();
            PreencherJtableConsulta();
        }
}//GEN-LAST:event_BTExcluiComadaActionPerformed

    private void BTExcluiComadaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BTExcluiComadaKeyPressed
//        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
//            DeletaComanda();
//        }
}//GEN-LAST:event_BTExcluiComadaKeyPressed

    private void BTSalvarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BTSalvarMouseClicked
}//GEN-LAST:event_BTSalvarMouseClicked

    private void BTSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTSalvarActionPerformed
        int statusEntrada = StatusEntrada();
        if (statusEntrada == 1) {
            if (TFCodigo.getText().isEmpty()) {
                SalvaEntrada();
            } else {
                AlterarEntrada();
            }
            PreencherJtableConsulta();
        }
}//GEN-LAST:event_BTSalvarActionPerformed

    private void BTSalvarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BTSalvarKeyPressed
//        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
//            if (status == 1) {
//                SalvaCliente();
//            } else if (status == 2) {
//                AlteraCliente();
//            }
//        }
//        jtableCliente.PreencherJtableCliente(comanda, id_mesa);
}//GEN-LAST:event_BTSalvarKeyPressed

    private void TBEntradaProdutoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TBEntradaProdutoMouseClicked

        if (evt.getClickCount() > 1) {
            int statusEntrada = StatusEntrada();
            if (statusEntrada == 1) {
                String id_itementrada = Utilitario.getValueColumn("id_itementrada", TBEntradaProduto);
                String id_entrada = Utilitario.getValueColumn("id_entrada", TBEntradaProduto);
                String id_produto = Utilitario.getValueColumn("Cód. Produto", TBEntradaProduto);
                DLCadItemEntrada cadItemEntrada = new DLCadItemEntrada(null, true, Integer.parseInt(id_itementrada), Integer.parseInt(id_entrada), Integer.parseInt(id_produto), 2, this);
                cadItemEntrada.setVisible(true);
                BTInsereProduto.requestFocus();
            }
        }
        HabilitaBtnInsereAlteraProduto();

    }//GEN-LAST:event_TBEntradaProdutoMouseClicked

    private void BTLimpaComanda1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTLimpaComanda1ActionPerformed
        LimparCamposHerder();
        PreencheJtableProdutoEntrada();
    }//GEN-LAST:event_BTLimpaComanda1ActionPerformed

    private void BTLimpaComanda1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BTLimpaComanda1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_BTLimpaComanda1KeyPressed

    private void TBConsultaEntradaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TBConsultaEntradaMouseClicked
        if (evt.getClickCount() > 1) {
            posicionaEntrada();
        }
}//GEN-LAST:event_TBConsultaEntradaMouseClicked

    private void TBConsultaEntradaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TBConsultaEntradaKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            posicionaEntrada();
        }
}//GEN-LAST:event_TBConsultaEntradaKeyPressed

    private void TF_DTIniFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TF_DTIniFocusGained
        TF_DTIni.selectAll();
    }//GEN-LAST:event_TF_DTIniFocusGained

    private void TF_DTIniFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TF_DTIniFocusLost
        if (TF_DTIni.getText().replaceAll("/", "").trim().equalsIgnoreCase("")) {
            TF_DTIni.setText("00000000");
        }
        PreencherJtableConsulta();
    }//GEN-LAST:event_TF_DTIniFocusLost

    private void TF_DTFinFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TF_DTFinFocusGained
        TF_DTFin.selectAll();
}//GEN-LAST:event_TF_DTFinFocusGained

    private void TF_DTFinFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TF_DTFinFocusLost
        if (TF_DTFin.getText().replaceAll("/", "").trim().equalsIgnoreCase("")) {
            TF_DTFin.setText("00000000");
        }
        PreencherJtableConsulta();
}//GEN-LAST:event_TF_DTFinFocusLost

    private void CBSituacaoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CBSituacaoItemStateChanged
        PreencherJtableConsulta();
}//GEN-LAST:event_CBSituacaoItemStateChanged

    private void CBSituacaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CBSituacaoKeyPressed
}//GEN-LAST:event_CBSituacaoKeyPressed

    private void TFCodEntIniFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TFCodEntIniFocusLost
        PreencherJtableConsulta();
    }//GEN-LAST:event_TFCodEntIniFocusLost

    private void TFCodEntFInFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TFCodEntFInFocusLost
        PreencherJtableConsulta();
    }//GEN-LAST:event_TFCodEntFInFocusLost

    private void TFSerieIniFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TFSerieIniFocusLost
        PreencherJtableConsulta();
    }//GEN-LAST:event_TFSerieIniFocusLost

    private void TFSerieFinFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TFSerieFinFocusLost
        PreencherJtableConsulta();
    }//GEN-LAST:event_TFSerieFinFocusLost

    private void TFNotaIniFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TFNotaIniFocusLost
        PreencherJtableConsulta();
    }//GEN-LAST:event_TFNotaIniFocusLost

    private void TFNotaFinFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TFNotaFinFocusLost
        PreencherJtableConsulta();
    }//GEN-LAST:event_TFNotaFinFocusLost

    private void TFCodFornecedorFinFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TFCodFornecedorFinFocusLost
        PreencherJtableConsulta();
    }//GEN-LAST:event_TFCodFornecedorFinFocusLost

    private void TFCodFornecedorIniFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TFCodFornecedorIniFocusLost
        PreencherJtableConsulta();
    }//GEN-LAST:event_TFCodFornecedorIniFocusLost

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JTextField tfTextFiel;
        tfTextFiel = TFCodFornecedor;
        DLFornecedor Insumo = new DLFornecedor(null, true, tfTextFiel);
        Insumo.setVisible(true);
        PegaDescFornecedor();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void TFCodFornecedorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TFCodFornecedorKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_F1) {
            JTextField tfTextFiel;
            tfTextFiel = TFCodFornecedor;
            DLFornecedor Insumo = new DLFornecedor(null, true, tfTextFiel);
            Insumo.setVisible(true);
            PegaDescFornecedor();
        }
    }//GEN-LAST:event_TFCodFornecedorKeyPressed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTAlteraProduto;
    private javax.swing.JButton BTExcluiComada;
    private javax.swing.JButton BTExcluiProduto;
    private javax.swing.JButton BTInsereProduto;
    private javax.swing.JButton BTLimpaComanda1;
    private javax.swing.JButton BTSalvar;
    private javax.swing.JButton BTStatus;
    private javax.swing.JComboBox CBSituacao;
    private javax.swing.JLabel LBCodigo;
    private javax.swing.JLabel LBData;
    private javax.swing.JLabel LBData1;
    private javax.swing.JLabel LBDataFin;
    private javax.swing.JLabel LBDataFin1;
    private javax.swing.JLabel LBDataFin2;
    private javax.swing.JLabel LBDataFin3;
    private javax.swing.JLabel LBDataFin4;
    private javax.swing.JLabel LBDataFin5;
    private javax.swing.JLabel LBDataFin6;
    private javax.swing.JLabel LBDataFin7;
    private javax.swing.JLabel LBDataIni;
    private javax.swing.JLabel LBFornecedor;
    private javax.swing.JLabel LBFornecedor1;
    private javax.swing.JLabel LBNota;
    private javax.swing.JLabel LBSerie;
    private javax.swing.JTable TBConsultaEntrada;
    private javax.swing.JTable TBEntradaProduto;
    private Componentes.DKJTFInteger TFCodEntFIn;
    private Componentes.DKJTFInteger TFCodEntIni;
    private Componentes.DKJTFInteger TFCodFornecedor;
    private Componentes.DKJTFInteger TFCodFornecedorFin;
    private Componentes.DKJTFInteger TFCodFornecedorIni;
    private Componentes.DKJTFInteger TFCodigo;
    private javax.swing.JTextField TFData;
    private javax.swing.JTextField TFDescFornecedor;
    private Componentes.DKJTFInteger TFNota;
    private Componentes.DKJTFInteger TFNotaFin;
    private Componentes.DKJTFInteger TFNotaIni;
    private javax.swing.JTextField TFSerie;
    private javax.swing.JTextField TFSerieFin;
    private javax.swing.JTextField TFSerieIni;
    private javax.swing.JTextField TFVlrTotal;
    private javax.swing.JFormattedTextField TF_DTFin;
    private javax.swing.JFormattedTextField TF_DTIni;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables

    private void SalvaEntrada() {
        if (TFCodFornecedor.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Deve ser informado o fornecedor!", "Alerta", JOptionPane.ERROR_MESSAGE);
            return;
        }

        ResultSet rsEntrada = FMaster.con.executeSQL("select * from estentradas where id_entrada = 0");
        try {
            int seq = Utilitario.getSequencia("estentradas", "id_entrada");

            rsEntrada.first();
            rsEntrada.moveToInsertRow();
            rsEntrada.updateInt("id_entrada", seq);
            rsEntrada.updateTimestamp("data_entrada", Utilitario.getDateAndTimeAtual());
            rsEntrada.updateString("serie_nota", TFSerie.getText().isEmpty() ? "" : TFSerie.getText());
            rsEntrada.updateInt("nota", Integer.parseInt(TFNota.getText().isEmpty() ? "0" : TFNota.getText()));
            rsEntrada.updateInt("fornecedor", Integer.parseInt(TFCodFornecedor.getText().isEmpty() ? "0" : TFCodFornecedor.getText()));
            rsEntrada.updateInt("status", 1);
            rsEntrada.insertRow();
            rsEntrada.close();

            preencheHeder(seq);
            PreencherJtableConsulta();
        } catch (SQLException ex) {
            Logger.getLogger(IFEntradaProdutos.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void LimparCamposHerder() {
        TFCodFornecedor.setText("");
        TFCodigo.setText("");
        TFData.setText("");
        TFDescFornecedor.setText("");
        TFNota.setText("");
        TFSerie.setText("");
        BTStatus.setText("...");
        BTStatus.setBackground(null);
        HabilitaBtnInsereProduto();
    }

    private void DeletaEntrada() {
        if (!TFCodigo.getText().isEmpty()) {
            String id_entrada = TFCodigo.getText().isEmpty() ? "0" : TFCodigo.getText();
            ResultSet rsEntradaProduto = FMaster.con.executeSQL("select count(*) as  cont from estitementrada where id_entrada = '" + id_entrada + "'");
            try {
                rsEntradaProduto.first();
                if (rsEntradaProduto.isFirst()) {
                    int count = rsEntradaProduto.getInt("cont");
                    if (count > 0) {
                        JOptionPane.showMessageDialog(null, "Entrada não pode ser excluido pois possui produto vinculado!", "Alerta", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                }
                rsEntradaProduto.close();
            } catch (SQLException ex) {
                Logger.getLogger(IFComanda.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        //
        try {
            if (!TFCodigo.getText().isEmpty()) {
                String id_entrada = TFCodigo.getText().isEmpty() ? "0" : TFCodigo.getText();
                FMaster.con.executeUpdate("delete from estentradas where id_entrada = '" + id_entrada + "'");
                LimparCamposHerder();
            } else {
                JOptionPane.showMessageDialog(null, "Uma entrada deve ser informada!", "Alerta", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Não foi possível excluir a entrada!", "Alerta", JOptionPane.ERROR_MESSAGE);
        }
        //
    }

    private void HabilitaBtnInsereProduto() {
        String id_entrada = TFCodigo.getText().isEmpty() ? "0" : TFCodigo.getText();
        ResultSet rsHabilitaBtn = FMaster.con.executeSQL("select * from estentradas where id_entrada = '" + id_entrada + "'");
        try {
            rsHabilitaBtn.first();
            if (rsHabilitaBtn.isFirst()) {
                BTInsereProduto.setEnabled(true);
            } else {
                BTInsereProduto.setEnabled(false);
            }
        } catch (SQLException ex) {
            Logger.getLogger(IFEntradaProdutos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void HabilitaBtnInsereAlteraProduto() {
        if (TBEntradaProduto.getSelectedRow() != -1) {
            BTAlteraProduto.setEnabled(true);
            BTExcluiProduto.setEnabled(true);
        } else {
            BTAlteraProduto.setEnabled(false);
            BTExcluiProduto.setEnabled(false);
        }
    }

    public void PreencheJtableProdutoEntrada() {

        String id_entrada = TFCodigo.getText().isEmpty() ? "0" : TFCodigo.getText();
        DefaultTableModel modelo = (DefaultTableModel) TBEntradaProduto.getModel();
        modelo.setNumRows(0);

        ResultSet rsProEntrada = FMaster.con.executeSQL("select * from estitementrada  where id_entrada = '" + id_entrada + "'");
        try {
            rsProEntrada.first();
            if (rsProEntrada.isFirst()) {
                do {
                    ResultSet rsProduto = FMaster.con.executeSQL("select * from estproduto where id_produto = '" + rsProEntrada.getString("id_produto") + "'");
                    rsProduto.first();
                    String descProduto = "";
                    if (rsProduto.isFirst()) {
                        descProduto = rsProduto.getString("descricao");
                    }
                    rsProduto.close();
                    modelo.addRow(new Object[]{rsProEntrada.getString("id_itementrada"),
                                rsProEntrada.getString("id_entrada"),
                                rsProEntrada.getString("id_produto"),
                                descProduto,
                                rsProEntrada.getString("id_unidade"),
                                Utilitario.getFomatDecimal3Casas(rsProEntrada.getFloat("qtde")),
                                Utilitario.getFomatDecimal(rsProEntrada.getFloat("vlr_unitario")),
                                Utilitario.getFomatDecimal(rsProEntrada.getFloat("vlr_total"))});
                } while (rsProEntrada.next());

            }
            rsProEntrada.close();
            CalculaValorTotal();
            HabilitaBtnInsereAlteraProduto();
        } catch (SQLException ex) {
            Logger.getLogger(IFEntradaProdutos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void ExcluiProduto() {
        try {
            if (TBEntradaProduto.getSelectedRow() != -1) {
                String id_itementrada = Utilitario.getValueColumn("id_itementrada", TBEntradaProduto);
                String id_entrada = Utilitario.getValueColumn("id_entrada", TBEntradaProduto);
                String id_produto = Utilitario.getValueColumn("Cód. Produto", TBEntradaProduto);
                FMaster.con.executeUpdate("delete from estitementrada where id_itementrada = '" + id_itementrada + "' and id_entrada = '" + id_entrada + "' and id_produto = '" + id_produto + "'");
                PreencheJtableProdutoEntrada();
                CalculaValorTotal();
                //      SetValuesRowTableCliente();
            } else {
                JOptionPane.showMessageDialog(null, "Selecione um produto!", "Alerta", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Não foi possível excluir o produto!", "Alerta", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void CalculaValorTotal() {
        if (!TFCodigo.getText().isEmpty()) {
            ResultSet rsValorTotal = FMaster.con.executeSQL("select sum(vlr_total) as vlr_total from estitementrada where id_entrada = '" + TFCodigo.getText() + "'");
            try {
                rsValorTotal.first();
                if (rsValorTotal.isFirst()) {
                    TFVlrTotal.setText(Utilitario.getFomatDecimal(rsValorTotal.getFloat("vlr_total")));
                } else {
                    TFVlrTotal.setText("");
                }
                rsValorTotal.close();
            } catch (SQLException ex) {
                Logger.getLogger(IFEntradaProdutos.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            TFVlrTotal.setText("");
        }
    }

    private void preencheHeder(int seq) {
        ResultSet rsConsultaRegInserido = FMaster.con.executeSQL("select * from estentradas where id_entrada = '" + seq + "'");
        try {
            rsConsultaRegInserido.first();
            if (rsConsultaRegInserido.isFirst()) {
                TFCodigo.setText(rsConsultaRegInserido.getString("id_entrada"));
                TFData.setText(Utilitario.FormatDate(rsConsultaRegInserido.getDate("data_entrada")));
                TFSerie.setText(rsConsultaRegInserido.getString("serie_nota"));
                TFNota.setText(rsConsultaRegInserido.getString("nota"));
                TFCodFornecedor.setText(rsConsultaRegInserido.getString("fornecedor"));

                if (rsConsultaRegInserido.getInt("status") == 1) {
                    BTStatus.setText("<<<<Fechar>>>>");
                    BTStatus.setBackground(Color.GREEN);
                } else if (rsConsultaRegInserido.getInt("status") == 2) {
                    BTStatus.setText("<<<<Abrir>>>>");
                    BTStatus.setBackground(Color.RED);
                } else {
                    BTStatus.setText("...");
                }
            }
            HabilitaBtnInsereProduto();
            rsConsultaRegInserido.close();
        } catch (SQLException ex) {
            Logger.getLogger(IFEntradaProdutos.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void FechaAbreEntrada() {
        if (!TFCodigo.getText().isEmpty()) {
            ResultSet rsAlteraStatusEntrada = FMaster.con.executeSQL("select * from estentradas where id_entrada = '" + TFCodigo.getText() + "'");
            try {
                rsAlteraStatusEntrada.first();
                if (rsAlteraStatusEntrada.isFirst()) {
                    if (rsAlteraStatusEntrada.getInt("status") == 1) {
                        int iresp = JOptionPane.showOptionDialog(null, "Será incrementado a quantidade informada para cada produto no cadastro do produto. Deseja continuar?", "", JOptionPane.YES_NO_OPTION,
                                JOptionPane.QUESTION_MESSAGE,
                                null, //do not use a custom Icon
                                options, //the titles of buttons
                                options[0]); //default button title
                        if (iresp == 0) {

                            AtualizaSaldoProd(1);

                            rsAlteraStatusEntrada.absolute(rsAlteraStatusEntrada.getRow());
                            rsAlteraStatusEntrada.updateInt("status", 2);
                            rsAlteraStatusEntrada.updateRow();
                            preencheHeder(rsAlteraStatusEntrada.getInt("id_entrada"));
                        }

                    } else if (rsAlteraStatusEntrada.getInt("status") == 2) {
                        int iresp = JOptionPane.showOptionDialog(null, "Será decrementado a quantidade informada para cada produto no cadastro do produto. Deseja continuar?", "", JOptionPane.YES_NO_OPTION,
                                JOptionPane.QUESTION_MESSAGE,
                                null, //do not use a custom Icon
                                options, //the titles of buttons
                                options[0]); //default button title
                        if (iresp == 0) {

                            AtualizaSaldoProd(2);

                            rsAlteraStatusEntrada.absolute(rsAlteraStatusEntrada.getRow());
                            rsAlteraStatusEntrada.updateInt("status", 1);
                            rsAlteraStatusEntrada.updateRow();
                            preencheHeder(rsAlteraStatusEntrada.getInt("id_entrada"));
                        }
                    }
                }
                rsAlteraStatusEntrada.close();
                PreencherJtableConsulta();
            } catch (SQLException ex) {
                Logger.getLogger(IFEntradaProdutos.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }

    private void posicionaEntrada() {
        String id_entrada = Utilitario.getValueColumn("id_entrada", TBConsultaEntrada);
        ResultSet rsEntrada = FMaster.con.executeSQL("select * from estentradas where id_entrada = '" + id_entrada + "'");
        try {
            rsEntrada.first();
            if (rsEntrada.isFirst()) {
                TFCodigo.setText(id_entrada);
                preencheHeder(Integer.parseInt(id_entrada));
                PreencheJtableProdutoEntrada();
                jTabbedPane1.setSelectedIndex(0);
            }
            rsEntrada.close();
        } catch (SQLException ex) {
            Logger.getLogger(IFComanda.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void PreencherJtableConsulta() {
        ResultSet rsEntrada = FMaster.con.executeSQL("select * from estentradas inner join estfornecedor on estfornecedor.id_fornecedor = estentradas.fornecedor " + Filtra() + " order by id_entrada");
        try {
            DefaultTableModel modelo = (DefaultTableModel) TBConsultaEntrada.getModel();
            modelo.setNumRows(0);
            while (rsEntrada.next()) {
                String descSituacao = "";
                int situacao = rsEntrada.getInt("status");
                if (situacao == 1) {
                    descSituacao = "Aberta";
                } else {
                    descSituacao = "Fechada";
                }
                modelo.addRow(new Object[]{rsEntrada.getString("id_entrada"),
                            rsEntrada.getString("id_entrada"),
                            Utilitario.FormatDate(rsEntrada.getDate("data_entrada")),
                            rsEntrada.getString("serie_nota"),
                            rsEntrada.getString("nota"),
                            descSituacao,
                            rsEntrada.getString("fornecedor"),
                            rsEntrada.getString("nome")});
            }
            rsEntrada.close();
        } catch (SQLException ex) {
            Logger.getLogger(IFComanda.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private String Filtra() {
        String id_entradaIni;
        String id_entradaFin;
        Date dDtIni;
        Date dDtFin;
        String serieIni;
        String serieFin;
        String notaIni;
        String notaFin;
        String fornecedorIni;
        String fornecedorFin;
        String situacao;

        String filtro = "";

        id_entradaIni = TFCodEntIni.getText().isEmpty() ? "0" : TFCodEntIni.getText();
        id_entradaFin = TFCodEntFIn.getText().isEmpty() ? "0" : TFCodEntFIn.getText();
        dDtIni = (java.sql.Date) Utilitario.getPegaDataSql(TF_DTIni.getText().equals("00/00/0000") ? "" : (TF_DTIni.getText()));
        dDtFin = (java.sql.Date) Utilitario.getPegaDataSql(TF_DTFin.getText().equals("00/00/0000") ? "" : (TF_DTFin.getText()));
        serieIni = TFSerieIni.getText().isEmpty() ? "0" : TFSerieIni.getText();
        serieFin = TFSerieFin.getText().isEmpty() ? "0" : TFSerieFin.getText();
        notaIni = TFNotaIni.getText().isEmpty() ? "0" : TFNotaIni.getText();
        notaFin = TFNotaFin.getText().isEmpty() ? "0" : TFNotaFin.getText();
        fornecedorIni = TFCodFornecedorIni.getText().isEmpty() ? "0" : TFCodFornecedorIni.getText();
        fornecedorFin = TFCodFornecedorFin.getText().isEmpty() ? "0" : TFCodFornecedorFin.getText();

        situacao = String.valueOf(CBSituacao.getSelectedIndex());

        if (!id_entradaIni.equals("0")) {
            if (filtro.equals("")) {
                filtro = " where id_entrada >= '" + id_entradaIni + "'";
            }
        }
        if (!id_entradaFin.equals("0")) {
            if (filtro.equals("")) {
                filtro = " where id_entrada <= '" + id_entradaFin + "'";
            } else {
                filtro = filtro + " and id_entrada <= '" + id_entradaFin + "'";
            }
        }

        if (dDtIni != null) {
            if (filtro.equals("")) {
                filtro = " where cast(data_entrada as date) >= '" + dDtIni + "'";
            } else {
                filtro = filtro + " and cast(data_entrada as date) >= '" + dDtIni + "'";
            }
        }
        if (dDtFin != null) {
            if (filtro.equals("")) {
                filtro = " where cast(data_entrada as date) <= '" + dDtFin + "'";
            } else {
                filtro = filtro + " and cast(data_entrada as date) <= '" + dDtFin + "'";
            }
        }

        if (!serieIni.equals("0")) {
            if (filtro.equals("")) {
                filtro = " where serie_nota >= '" + serieIni + "'";
            } else {
                filtro = filtro + " and serie_nota >= '" + serieIni + "'";
            }
        }
        if (!serieFin.equals("0")) {
            if (filtro.equals("")) {
                filtro = " where serie_nota <= '" + serieFin + "'";
            } else {
                filtro = filtro + " and serie_nota <= '" + serieFin + "'";
            }
        }

        if (!notaIni.equals("0")) {
            if (filtro.equals("")) {
                filtro = " where nota >= '" + notaIni + "'";
            } else {
                filtro = filtro + " and nota >= '" + notaIni + "'";
            }
        }

        if (!notaFin.equals("0")) {
            if (filtro.equals("")) {
                filtro = " where nota <= '" + notaFin + "'";
            } else {
                filtro = filtro + " and nota <= '" + notaFin + "'";
            }
        }

        if (!fornecedorIni.equals("0")) {
            if (filtro.equals("")) {
                filtro = " where nota >= '" + fornecedorIni + "'";
            } else {
                filtro = filtro + " and nota >= '" + fornecedorIni + "'";
            }
        }

        if (!fornecedorFin.equals("0")) {
            if (filtro.equals("")) {
                filtro = " where fornecedor <= '" + fornecedorFin + "'";
            } else {
                filtro = filtro + " and fornecedor <= '" + fornecedorFin + "'";
            }
        }

        if (!situacao.equals("0")) {
            if (filtro.equals("")) {
                filtro = " where status = '" + situacao + "'";
            } else {
                filtro = filtro + " and status = '" + situacao + "'";
            }
        }
        return filtro;
    }

    private void AlterarEntrada() {
        if (TFCodFornecedor.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Deve ser informado o fornecedor!", "Alerta", JOptionPane.ERROR_MESSAGE);
            return;
        }

        ResultSet rsEntrada = FMaster.con.executeSQL("select * from estentradas where id_entrada = '" + TFCodigo.getText() + "'");
        try {
            rsEntrada.first();
            if (rsEntrada.isFirst()) {
                int iresp = JOptionPane.showOptionDialog(null, "Deseja alterar?", "", JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE,
                        null, //do not use a custom Icon
                        options, //the titles of buttons
                        options[0]); //default button title
                if (iresp == 0) {
                    rsEntrada.absolute(rsEntrada.getRow());
                    rsEntrada.updateString("serie_nota", TFSerie.getText().isEmpty() ? "" : TFSerie.getText());
                    rsEntrada.updateInt("nota", Integer.parseInt(TFNota.getText().isEmpty() ? "0" : TFNota.getText()));
                    rsEntrada.updateInt("fornecedor", Integer.parseInt(TFCodFornecedor.getText().isEmpty() ? "0" : TFCodFornecedor.getText()));
                    rsEntrada.updateRow();
                    preencheHeder(rsEntrada.getInt("id_entrada"));
                }
            }
            rsEntrada.close();
            PreencherJtableConsulta();
        } catch (SQLException ex) {
            Logger.getLogger(IFEntradaProdutos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private int StatusEntrada() {
        int iRet = 1;
        if (!TFCodigo.getText().isEmpty()) {
            ResultSet rsEntrada = FMaster.con.executeSQL("select * from estentradas where id_entrada = '" + TFCodigo.getText() + "'");
            try {
                rsEntrada.first();
                if (rsEntrada.isFirst()) {
                    if (rsEntrada.getInt("status") == 1) {
                        iRet = 1;
                    }
                    if (rsEntrada.getInt("status") == 2) {
                        JOptionPane.showMessageDialog(null, "Entrada fechada não pode ser alterada!", "Alerta", JOptionPane.ERROR_MESSAGE);
                        iRet = 2;
                    }
                }
                return iRet;
            } catch (SQLException ex) {
                Logger.getLogger(IFEntradaProdutos.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        return iRet;
    }

    private void AtualizaSaldoProd(int i) {
        if (!TFCodigo.getText().isEmpty()) {
            ResultSet rsAtualizaSaldo = FMaster.con.executeSQL("select * from estitementrada where id_entrada = '" + TFCodigo.getText() + "'");
            try {
                rsAtualizaSaldo.first();
                if (rsAtualizaSaldo.isFirst()) {
                    do {
                        if (i == 1) {
                            MovimentoEstoque.AtualizaSaldoProduto(1, rsAtualizaSaldo.getInt("id_produto"), rsAtualizaSaldo.getFloat("qtde"));
                        }
                        if (i == 2) {
                            MovimentoEstoque.AtualizaSaldoProduto(2, rsAtualizaSaldo.getInt("id_produto"), rsAtualizaSaldo.getFloat("qtde"));
                        }
                    } while (rsAtualizaSaldo.next());
                }
                rsAtualizaSaldo.close();
            } catch (SQLException ex) {
                Logger.getLogger(IFEntradaProdutos.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }

    private void PegaDescFornecedor() {
        if (!TFCodFornecedor.getText().isEmpty()) {
            ResultSet rsFornecedor = FMaster.con.executeSQL("select * from estfornecedor where id_fornecedor = '" + TFCodFornecedor.getText() + "'");
            try {
                rsFornecedor.first();
                if (rsFornecedor.isFirst()) {
                    TFDescFornecedor.setText(rsFornecedor.getString("nome"));
                }
            } catch (SQLException ex) {
                Logger.getLogger(IFEntradaProdutos.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    rsFornecedor.close();
                } catch (SQLException ex) {
                    Logger.getLogger(DLCadInsumos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
    }
}
