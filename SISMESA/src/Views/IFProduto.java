/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewJInternalFrame.java
 *
 * Created on 20/05/2010, 22:42:47
 */
package Views;

import classess.Utilitario;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Maicol
 */
public class IFProduto extends javax.swing.JInternalFrame {
    //Declarando resultSet * recebe o resultado da sentecao SQl

    Object[] options = {"Sim", "Não"};

    /** Creates new form NewJInternalFrame */
    public IFProduto() {
        initComponents();
        //redimenciona o lookandFeeld de acordo com o selecionado
        SwingUtilities.updateComponentTreeUI(this);
        this.pack();
        PreencherJtableConsulta();
        HabilitaBtnInsereAlteraProduto();

        HabilitaBtnHeder();
        preencheUnidadePadrao();
        AlternaCampos();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TBInsumos = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        BTNovo = new javax.swing.JButton();
        BTSalvar = new javax.swing.JButton();
        BTExcluir = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        BTAlteraProduto = new javax.swing.JButton();
        BTInsereProduto = new javax.swing.JButton();
        BTExcluiProduto = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        LBSaldoEmEstoque = new javax.swing.JLabel();
        TFSaldoEmEstoque = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        TFCodigo = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        TFDescricao = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        CBTipoProduto = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        TFValorUnitario = new Componentes.DKJTFFloat();
        CBUnidadePadrao = new javax.swing.JComboBox();
        LBAlterna = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TbPadrao = new javax.swing.JTable();
        FTFfiltro = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        TFDESCGERAL = new javax.swing.JTextField();
        BT_FILTER = new javax.swing.JButton();
        FTVlr_Ini = new Componentes.DKJTFFloat();
        FTVlr_Fin = new Componentes.DKJTFFloat();
        TFCod_Ini = new Componentes.DKJTFInteger();
        TFCod_Fin = new Componentes.DKJTFInteger();
        CBConsultaTipoProduto = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Cadastro de produtos"); // NOI18N
        setMinimumSize(new java.awt.Dimension(624, 371));

        jTabbedPane1.setBackground(new java.awt.Color(153, 153, 153));
        jTabbedPane1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTabbedPane1FocusGained(evt);
            }
        });

        jPanel1.setLayout(new java.awt.GridBagLayout());

        TBInsumos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id_produto", "id_itemproduto", "Cód. Insumo", "Descrição", "Unidade", "Qtde"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TBInsumos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TBInsumosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TBInsumos);
        TBInsumos.getColumnModel().getColumn(0).setMinWidth(0);
        TBInsumos.getColumnModel().getColumn(0).setPreferredWidth(0);
        TBInsumos.getColumnModel().getColumn(0).setMaxWidth(0);
        TBInsumos.getColumnModel().getColumn(1).setMinWidth(0);
        TBInsumos.getColumnModel().getColumn(1).setPreferredWidth(0);
        TBInsumos.getColumnModel().getColumn(1).setMaxWidth(0);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 567;
        gridBagConstraints.ipady = 63;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel1.add(jScrollPane2, gridBagConstraints);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("INSUMOS PARA COMPOSIÇÃO DO PRODUTO");
        jLabel9.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 346;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel1.add(jLabel9, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        BTNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Clear-32.png"))); // NOI18N
        BTNovo.setText("Limpar"); // NOI18N
        BTNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNovoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        jPanel3.add(BTNovo, gridBagConstraints);

        BTSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/save_16.png"))); // NOI18N
        BTSalvar.setText("Salvar"); // NOI18N
        BTSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTSalvarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipady = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel3.add(BTSalvar, gridBagConstraints);

        BTExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/delete_16.png"))); // NOI18N
        BTExcluir.setText("Excluir"); // NOI18N
        BTExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTExcluirActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipady = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel3.add(BTExcluir, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel1.add(jPanel3, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        BTAlteraProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/1287690531_27-Edit Text.png"))); // NOI18N
        BTAlteraProduto.setText("Alterar insumo");
        BTAlteraProduto.setPreferredSize(new java.awt.Dimension(125, 25));
        BTAlteraProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTAlteraProdutoActionPerformed(evt);
            }
        });
        BTAlteraProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BTAlteraProdutoKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(2, 10, 0, 0);
        jPanel4.add(BTAlteraProduto, gridBagConstraints);

        BTInsereProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/new.png"))); // NOI18N
        BTInsereProduto.setText("Inserir insumo");
        BTInsereProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTInsereProdutoActionPerformed(evt);
            }
        });
        BTInsereProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                BTInsereProdutoFocusGained(evt);
            }
        });
        BTInsereProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BTInsereProdutoKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 0, 0);
        jPanel4.add(BTInsereProduto, gridBagConstraints);

        BTExcluiProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/delete_16.png"))); // NOI18N
        BTExcluiProduto.setText("Excluir insumo");
        BTExcluiProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTExcluiProdutoActionPerformed(evt);
            }
        });
        BTExcluiProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BTExcluiProdutoKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 0, 0);
        jPanel4.add(BTExcluiProduto, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.ipady = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jPanel4, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        LBSaldoEmEstoque.setText("Saldo em estoque");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        jPanel5.add(LBSaldoEmEstoque, gridBagConstraints);

        TFSaldoEmEstoque.setEditable(false);
        TFSaldoEmEstoque.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        TFSaldoEmEstoque.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        TFSaldoEmEstoque.setFocusable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        jPanel5.add(TFSaldoEmEstoque, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        jPanel1.add(jPanel5, gridBagConstraints);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        TFCodigo.setBackground(new java.awt.Color(204, 204, 204));
        TFCodigo.setEditable(false);
        TFCodigo.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        jPanel6.add(TFCodigo, gridBagConstraints);

        jLabel10.setText("Codigo"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        jPanel6.add(jLabel10, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 220;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 0, 2);
        jPanel6.add(TFDescricao, gridBagConstraints);

        jLabel3.setText("Descrição"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 0, 0);
        jPanel6.add(jLabel3, gridBagConstraints);

        CBTipoProduto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Produto", "Insumo" }));
        CBTipoProduto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CBTipoProdutoItemStateChanged(evt);
            }
        });
        CBTipoProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBTipoProdutoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        jPanel6.add(CBTipoProduto, gridBagConstraints);

        jLabel2.setText("Tipo produto"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        jPanel6.add(jLabel2, gridBagConstraints);

        TFValorUnitario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFValorUnitarioActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 0, 0);
        jPanel6.add(TFValorUnitario, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 0, 0);
        jPanel6.add(CBUnidadePadrao, gridBagConstraints);

        LBAlterna.setText("Alterna Label"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 0, 0);
        jPanel6.add(LBAlterna, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        jPanel1.add(jPanel6, gridBagConstraints);

        jTabbedPane1.addTab("Cadastrar", jPanel1);

        TbPadrao.setAutoCreateRowSorter(true);
        TbPadrao.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        TbPadrao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descrição", "Tipo produto", "Valor unitário", "Uni. padrão", "Saldo estoque"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TbPadrao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TbPadraoMouseClicked1(evt);
            }
        });
        TbPadrao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TbPadraoKeyPressed1(evt);
            }
        });
        jScrollPane1.setViewportView(TbPadrao);
        TbPadrao.getColumnModel().getColumn(0).setMinWidth(70);
        TbPadrao.getColumnModel().getColumn(0).setPreferredWidth(70);
        TbPadrao.getColumnModel().getColumn(0).setMaxWidth(70);
        TbPadrao.getColumnModel().getColumn(1).setMinWidth(200);
        TbPadrao.getColumnModel().getColumn(1).setPreferredWidth(200);
        TbPadrao.getColumnModel().getColumn(1).setMaxWidth(200);

        FTFfiltro.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        FTFfiltro.setLayout(null);

        jLabel1.setText("Cód. Ini.:"); // NOI18N
        FTFfiltro.add(jLabel1);
        jLabel1.setBounds(12, 16, 70, 14);

        jLabel5.setText("Cód. Fin.:"); // NOI18N
        FTFfiltro.add(jLabel5);
        jLabel5.setBounds(143, 16, 60, 14);

        jLabel6.setText("Desc:"); // NOI18N
        FTFfiltro.add(jLabel6);
        jLabel6.setBounds(12, 55, 60, 14);

        jLabel7.setText("Vlr Ini.:"); // NOI18N
        FTFfiltro.add(jLabel7);
        jLabel7.setBounds(270, 16, 80, 14);

        jLabel8.setText("Vlr Fin:"); // NOI18N
        FTFfiltro.add(jLabel8);
        jLabel8.setBounds(415, 16, 50, 14);

        TFDESCGERAL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TFDESCGERALKeyReleased(evt);
            }
        });
        FTFfiltro.add(TFDESCGERAL);
        TFDESCGERAL.setBounds(76, 52, 190, 20);

        BT_FILTER.setText("Limpar"); // NOI18N
        BT_FILTER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_FILTERActionPerformed(evt);
            }
        });
        BT_FILTER.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BT_FILTERKeyPressed(evt);
            }
        });
        FTFfiltro.add(BT_FILTER);
        BT_FILTER.setBounds(473, 51, 85, 23);

        FTVlr_Ini.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                FTVlr_IniFocusLost(evt);
            }
        });
        FTFfiltro.add(FTVlr_Ini);
        FTVlr_Ini.setBounds(353, 13, 58, 20);

        FTVlr_Fin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                FTVlr_FinFocusLost(evt);
            }
        });
        FTFfiltro.add(FTVlr_Fin);
        FTVlr_Fin.setBounds(472, 13, 62, 20);

        TFCod_Ini.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TFCod_IniFocusLost(evt);
            }
        });
        FTFfiltro.add(TFCod_Ini);
        TFCod_Ini.setBounds(83, 13, 56, 20);

        TFCod_Fin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TFCod_FinFocusLost(evt);
            }
        });
        FTFfiltro.add(TFCod_Fin);
        TFCod_Fin.setBounds(209, 13, 57, 20);

        CBConsultaTipoProduto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todos", "Produto", "Insumo" }));
        CBConsultaTipoProduto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CBConsultaTipoProdutoItemStateChanged(evt);
            }
        });
        CBConsultaTipoProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBConsultaTipoProdutoActionPerformed(evt);
            }
        });
        FTFfiltro.add(CBConsultaTipoProduto);
        CBConsultaTipoProduto.setBounds(353, 52, 110, 20);

        jLabel11.setText("Tipo:"); // NOI18N
        FTFfiltro.add(jLabel11);
        jLabel11.setBounds(270, 55, 70, 14);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 603, Short.MAX_VALUE)
            .addComponent(FTFfiltro, javax.swing.GroupLayout.DEFAULT_SIZE, 603, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(FTFfiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Pesquisar", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 608, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE)
        );

        setBounds(100, 50, 624, 371);
    }// </editor-fold>//GEN-END:initComponents

    private void BTSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTSalvarActionPerformed
        if (TFCodigo.getText().isEmpty()) {
            SalvarProduto();
        } else {
            AlterarProduto();
        }

    }//GEN-LAST:event_BTSalvarActionPerformed

    private void BTNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNovoActionPerformed
        LimpaCampos();
        PreencherJtableInsumo();
    }//GEN-LAST:event_BTNovoActionPerformed

    private void TbPadraoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TbPadraoMouseClicked
        if (evt.getClickCount() > 2) {
            prencherHeder(0);
        }
    }//GEN-LAST:event_TbPadraoMouseClicked

    private void BTExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTExcluirActionPerformed
        DeletaProduto();
    }//GEN-LAST:event_BTExcluirActionPerformed

    private void jTabbedPane1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTabbedPane1FocusGained
        // JOptionPane.showMessageDialog(null, "b");
//        TFDescricao.requestFocusInWindow(); //RAUL - ALTERADO POIS ISSO PODE CONFUNDIR OS EVENTOS DO PAINEL FUTURAMENTE
    }//GEN-LAST:event_jTabbedPane1FocusGained

    private void TbPadraoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TbPadraoKeyPressed
//        if (evt.getKeyCode() == evt.VK_ENTER) {
//            prencherHeder();
//        }
    }//GEN-LAST:event_TbPadraoKeyPressed

    private void TFDESCGERALKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TFDESCGERALKeyReleased
        PreencherJtableConsulta();
    }//GEN-LAST:event_TFDESCGERALKeyReleased

    private void BT_FILTERKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BT_FILTERKeyPressed
//        if (evt.getKeyCode() == evt.VK_ENTER) {
//            LimpaCamposSelecao();
//            FiltraGeral();
//        }
    }//GEN-LAST:event_BT_FILTERKeyPressed

    private void BT_FILTERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BT_FILTERActionPerformed
        LimpaCamposSelecao();
        PreencherJtableConsulta();
    }//GEN-LAST:event_BT_FILTERActionPerformed

    private void TbPadraoKeyPressed1(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TbPadraoKeyPressed1
        if (evt.getKeyCode() == evt.VK_ENTER) {
            posicionaProduto();
        }
    }//GEN-LAST:event_TbPadraoKeyPressed1

    private void TbPadraoMouseClicked1(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TbPadraoMouseClicked1
        if (evt.getClickCount() > 1) {
            posicionaProduto();
        }
    }//GEN-LAST:event_TbPadraoMouseClicked1

    private void FTVlr_IniFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_FTVlr_IniFocusLost
        PreencherJtableConsulta();
    }//GEN-LAST:event_FTVlr_IniFocusLost

    private void FTVlr_FinFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_FTVlr_FinFocusLost
        PreencherJtableConsulta();
    }//GEN-LAST:event_FTVlr_FinFocusLost

    private void TFCod_IniFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TFCod_IniFocusLost
        PreencherJtableConsulta();
    }//GEN-LAST:event_TFCod_IniFocusLost

    private void TFCod_FinFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TFCod_FinFocusLost
        PreencherJtableConsulta();
    }//GEN-LAST:event_TFCod_FinFocusLost

    private void BTAlteraProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTAlteraProdutoActionPerformed
        int id_itemproduto = Integer.parseInt(Utilitario.getValueColumn("id_itemproduto", TBInsumos));
        int id_produto = Integer.parseInt(Utilitario.getValueColumn("id_produto", TBInsumos));
        DLCadInsumos cadInsumo = new DLCadInsumos(null, closable, id_itemproduto, id_produto, 2, this);
        cadInsumo.setVisible(true);
        HabilitaBtnInsereAlteraProduto();
}//GEN-LAST:event_BTAlteraProdutoActionPerformed

    private void BTAlteraProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BTAlteraProdutoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            int id_itemproduto = Integer.parseInt(Utilitario.getValueColumn("id_itemproduto", TBInsumos));
            int id_produto = Integer.parseInt(Utilitario.getValueColumn("id_produto", TBInsumos));
            DLCadInsumos cadInsumo = new DLCadInsumos(null, closable, id_itemproduto, id_produto, 2, this);
            cadInsumo.setVisible(true);
            HabilitaBtnInsereAlteraProduto();
        }
}//GEN-LAST:event_BTAlteraProdutoKeyPressed

    private void BTInsereProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTInsereProdutoActionPerformed
        if (!TFCodigo.getText().isEmpty()) {
            try {
                ResultSet rsTipoProduto = FMaster.con.executeSQL("select tipo_produto from estproduto where id_produto = '" + TFCodigo.getText() + "'");
                rsTipoProduto.first();
                if (rsTipoProduto.getString("tipo_produto").equals("1")) {
                    int id_produto = Integer.parseInt(TFCodigo.getText());
                    DLCadInsumos cadInsumo = new DLCadInsumos(null, closable, 0, id_produto, 1, this);
                    cadInsumo.setVisible(true);
                    rsTipoProduto.close();
                } else {
                    JOptionPane.showMessageDialog(null, "Produto do tipo insumo não pode ser cadastrado insumo!", "Alerta", JOptionPane.ERROR_MESSAGE);
                    rsTipoProduto.close();
                    return;
                }
            } catch (SQLException ex) {
                Logger.getLogger(IFProduto.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        HabilitaBtnInsereAlteraProduto();
}//GEN-LAST:event_BTInsereProdutoActionPerformed

    private void BTInsereProdutoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BTInsereProdutoFocusGained
        //   PreencheJtableProduto();
}//GEN-LAST:event_BTInsereProdutoFocusGained

    private void BTInsereProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BTInsereProdutoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            int id_produto = Integer.parseInt(TFCodigo.getText());
            DLCadInsumos cadInsumo = new DLCadInsumos(null, closable, 0, id_produto, 1, this);
            cadInsumo.setVisible(true);
        }
}//GEN-LAST:event_BTInsereProdutoKeyPressed

    private void BTExcluiProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTExcluiProdutoActionPerformed
        ExcluiProduto();
}//GEN-LAST:event_BTExcluiProdutoActionPerformed

    private void BTExcluiProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BTExcluiProdutoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ExcluiProduto();
        }
}//GEN-LAST:event_BTExcluiProdutoKeyPressed

    private void TBInsumosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TBInsumosMouseClicked
        if (evt.getClickCount() > 1) {
            int id_itemproduto = Integer.parseInt(Utilitario.getValueColumn("id_itemproduto", TBInsumos));
            int id_produto = Integer.parseInt(Utilitario.getValueColumn("id_produto", TBInsumos));
            DLCadInsumos cadInsumo = new DLCadInsumos(null, closable, id_itemproduto, id_produto, 2, this);
            cadInsumo.setVisible(true);
        }
        HabilitaBtnInsereAlteraProduto();
    }//GEN-LAST:event_TBInsumosMouseClicked

    private void CBConsultaTipoProdutoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CBConsultaTipoProdutoItemStateChanged
        PreencherJtableConsulta();
    }//GEN-LAST:event_CBConsultaTipoProdutoItemStateChanged

    private void TFValorUnitarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFValorUnitarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFValorUnitarioActionPerformed

    private void CBTipoProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBTipoProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CBTipoProdutoActionPerformed

    private void CBTipoProdutoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CBTipoProdutoItemStateChanged
        AlternaCampos();
    }//GEN-LAST:event_CBTipoProdutoItemStateChanged

    private void CBConsultaTipoProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBConsultaTipoProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CBConsultaTipoProdutoActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTAlteraProduto;
    private javax.swing.JButton BTExcluiProduto;
    private javax.swing.JButton BTExcluir;
    private javax.swing.JButton BTInsereProduto;
    private javax.swing.JButton BTNovo;
    private javax.swing.JButton BTSalvar;
    private javax.swing.JButton BT_FILTER;
    private javax.swing.JComboBox CBConsultaTipoProduto;
    private javax.swing.JComboBox CBTipoProduto;
    private javax.swing.JComboBox CBUnidadePadrao;
    private javax.swing.JPanel FTFfiltro;
    private Componentes.DKJTFFloat FTVlr_Fin;
    private Componentes.DKJTFFloat FTVlr_Ini;
    private javax.swing.JLabel LBAlterna;
    private javax.swing.JLabel LBSaldoEmEstoque;
    private javax.swing.JTable TBInsumos;
    private Componentes.DKJTFInteger TFCod_Fin;
    private Componentes.DKJTFInteger TFCod_Ini;
    private javax.swing.JTextField TFCodigo;
    private javax.swing.JTextField TFDESCGERAL;
    private javax.swing.JTextField TFDescricao;
    private javax.swing.JTextField TFSaldoEmEstoque;
    private Componentes.DKJTFFloat TFValorUnitario;
    private javax.swing.JTable TbPadrao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables

    private void LimpaCampos() {
        TFCodigo.setText("");
        TFDescricao.setText("");
        TFValorUnitario.setText("");
        TFSaldoEmEstoque.setText("");
        HabilitaBtnHeder();
        TFDescricao.requestFocus();
    }

    private void prencherHeder(int id) {
        ResultSet rsConsultaRegInserido = FMaster.con.executeSQL("select * from estproduto where id_produto = '" + id + "'");
        try {
            rsConsultaRegInserido.first();
            if (rsConsultaRegInserido.isFirst()) {
                TFCodigo.setText(rsConsultaRegInserido.getString("id_produto"));
                TFDescricao.setText(rsConsultaRegInserido.getString("descricao"));
                TFValorUnitario.setText(String.valueOf(Utilitario.getFomatDecimal(rsConsultaRegInserido.getFloat("vlr_unitario"))));
                TFSaldoEmEstoque.setText(String.valueOf(Utilitario.getFomatDecimal3Casas(rsConsultaRegInserido.getFloat("saldo_estoque"))));
                CBTipoProduto.setSelectedIndex(rsConsultaRegInserido.getInt("tipo_produto") - 1);
                CBUnidadePadrao.setSelectedItem(rsConsultaRegInserido.getString("unidade_padrao"));
                TFDescricao.requestFocus();
            }
            rsConsultaRegInserido.close();
            PreencherJtableInsumo();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problema no posicionamento do produto");
        }
        HabilitaBtnHeder();
    }

    private void HabilitaBtnHeder() {
        if (TFCodigo.getText().isEmpty()) {
            BTInsereProduto.setEnabled(false);
            BTExcluir.setEnabled(false);
        } else {
            BTInsereProduto.setEnabled(true);
            BTExcluir.setEnabled(true);
        }
    }

    private void BloqueiaCampos(boolean status) {
        TFCodigo.setEditable(status);
        TFDescricao.setEditable(status);
        TFValorUnitario.setEditable(status);
    }

    private void SalvarProduto() {
        if (CBTipoProduto.getSelectedIndex() == 1) {
            if (CBUnidadePadrao.getSelectedIndex() < 0) {
                JOptionPane.showMessageDialog(null, "Deve ser informado a unidade!", "Alerta", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        try {
            ResultSet rsProduto = FMaster.con.executeSQL("select * from estproduto where id_produto = 0");
            rsProduto.first();
            rsProduto.moveToInsertRow();
            rsProduto.updateInt("id_produto", Utilitario.getSequencia("estproduto", "id_produto"));
            rsProduto.updateString("descricao", TFDescricao.getText());
            rsProduto.updateFloat("vlr_unitario", Float.parseFloat(TFValorUnitario.getText().isEmpty() ? "0" : TFValorUnitario.getText().replace(".", "").replace(",", ".")));
            rsProduto.updateInt("tipo_produto", CBTipoProduto.getSelectedIndex() + 1);
            if (CBTipoProduto.getSelectedIndex() == 1) {
                rsProduto.updateString("unidade_padrao", CBUnidadePadrao.getSelectedItem().toString().isEmpty() ? "" : CBUnidadePadrao.getSelectedItem().toString());
            }
            rsProduto.insertRow();
            prencherHeder(rsProduto.getInt("id_produto"));
            rsProduto.close();
            PreencherJtableConsulta();
        } catch (SQLException ex) {
            Logger.getLogger(IFProduto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void AlterarProduto() {
        if (CBTipoProduto.getSelectedIndex() == 1) {
            if (CBUnidadePadrao.getSelectedIndex() < 0) {
                JOptionPane.showMessageDialog(null, "Deve ser informado a unidade!", "Alerta", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        ResultSet rsProduto = FMaster.con.executeSQL("select * from estproduto where id_produto = '" + TFCodigo.getText() + "'");
        try {
            rsProduto.first();
            if (rsProduto.isFirst()) {
                int iresp = JOptionPane.showOptionDialog(null, "Deseja alterar?", "", JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE,
                        null, //do not use a custom Icon
                        options, //the titles of buttons
                        options[0]); //default button title
                if (iresp == 0) {
                    if (rsProduto.getInt("tipo_produto") != (CBTipoProduto.getSelectedIndex() + 1)) {
                        ResultSet rsCountItemProduto = FMaster.con.executeSQL("select count(*)as count from estitemproduto where id_produto = '" + TFCodigo.getText() + "'");
                        rsCountItemProduto.first();
                        if (rsCountItemProduto.getInt("count") > 0) {
                            JOptionPane.showMessageDialog(null, "Não foi possível fazer a alteração, tipo de produto não pode ser alterado!", "Alerta", JOptionPane.ERROR_MESSAGE);
                            prencherHeder(rsProduto.getInt("id_produto"));
                            rsCountItemProduto.close();
                            rsProduto.close();
                            return;
                        }
                        rsCountItemProduto.close();

                        if (rsProduto.getFloat("saldo_estoque") != 0) {
                            JOptionPane.showMessageDialog(null, "Produto com saldo de estoque não pode ser alterado!", "Alerta", JOptionPane.ERROR_MESSAGE);
                            prencherHeder(rsProduto.getInt("id_produto"));
                            rsProduto.close();
                            return;
                        }
                    }
                    rsProduto.absolute(rsProduto.getRow());
                    rsProduto.updateString("descricao", TFDescricao.getText());
                    rsProduto.updateFloat("vlr_unitario", Float.parseFloat(TFValorUnitario.getText().isEmpty() ? "0" : TFValorUnitario.getText().replace(".", "").replace(",", ".")));
                    rsProduto.updateInt("tipo_produto", CBTipoProduto.getSelectedIndex() + 1);
                    if (CBTipoProduto.getSelectedIndex() == 1) {
                        rsProduto.updateString("unidade_padrao", CBUnidadePadrao.getSelectedItem().toString().isEmpty() ? "" : CBUnidadePadrao.getSelectedItem().toString());
                    }
                    rsProduto.updateRow();
                    prencherHeder(rsProduto.getInt("id_produto"));
                }
            }
            rsProduto.close();
            PreencherJtableConsulta();
        } catch (SQLException ex) {
            Logger.getLogger(IFProduto.class.getName()).log(Level.SEVERE, null, ex);
        }




    }

    private void Filtra(String sFiltroGeral) {
        String sCodIni = TFCod_Ini.getText();
        String sCodFin = TFCod_Fin.getText();
        String sVlrIni = (FTVlr_Ini.getText().replaceAll(",", "."));
        String sVlrFin = (FTVlr_Fin.getText().replaceAll(",", "."));
        String sFiltro = "";

        if (!sCodIni.equals("")) {
            sFiltro = (" ID_PRODUTO>=" + sCodIni);
        }
        if (!sCodFin.equals("")) {
            if (!sFiltro.equals("")) {
                sFiltro = (sFiltro + " AND");
            }
            sFiltro = (sFiltro + " ID_PRODUTO<=" + sCodFin);
        }
        if (!sVlrIni.equals("0.00")) {
            if (!sFiltro.equals("")) {
                sFiltro = (sFiltro + " AND");
            }
            sFiltro = (sFiltro + " VLR_UNITARIO>=" + sVlrIni);
        }
        if (!sVlrFin.equals("0.00")) {
            if (!sFiltro.equals("")) {
                sFiltro = (sFiltro + " AND");
            }
            sFiltro = (sFiltro + " VLR_UNITARIO<=" + sVlrFin);
        }

        if ((!sFiltroGeral.equals("")) && (!sFiltro.equals(""))) {
            sFiltro = (sFiltro + " AND (" + sFiltroGeral + ")");
        } else if (sFiltro.equals("")) {
            sFiltro = sFiltroGeral;
        }
        if (!sFiltro.equals("")) {
            sFiltro = (sFiltro + "ORDER BY ID_PRODUTO");
        }

        //   PreencherJtable(sFiltro);

    }

    private void LimpaCamposSelecao() {
        TFCod_Ini.setText("");
        TFCod_Fin.setText("");
        FTVlr_Fin.setText("0,00");
        FTVlr_Ini.setText("0,00");
        TFDESCGERAL.setText("");
        CBConsultaTipoProduto.setSelectedIndex(0);
    }

    private void DeletaProduto() {
        //
        if (!TFCodigo.getText().isEmpty()) {
            String id_produto = TFCodigo.getText().isEmpty() ? "0" : TFCodigo.getText();
            ResultSet rsProduto = FMaster.con.executeSQL("select count(*) as  cont from estitemproduto where id_produto = '" + id_produto + "'");
            try {
                rsProduto.first();
                if (rsProduto.isFirst()) {
                    int count = rsProduto.getInt("cont");
                    if (count > 0) {
                        JOptionPane.showMessageDialog(null, "Produto não pode ser excluido pois possui produto vinculado!", "Alerta", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                }
                rsProduto.close();
            } catch (SQLException ex) {
                Logger.getLogger(IFComanda.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        //
        if (!TFCodigo.getText().isEmpty()) {
            String id_produto = TFCodigo.getText().isEmpty() ? "0" : TFCodigo.getText();
            ResultSet rsProduto = FMaster.con.executeSQL("select * from estproduto where id_produto = '" + id_produto + "'");
            try {
                rsProduto.first();
                if (rsProduto.isFirst()) {

                    if (rsProduto.getFloat("saldo_estoque") != 0 && rsProduto.getInt("tipo_produto") == 2) {
                        JOptionPane.showMessageDialog(null, "Produto com saldo de estoque não pode ser excluido!", "Alerta", JOptionPane.ERROR_MESSAGE);
                        return;
                    }

                    rsProduto.absolute(rsProduto.getRow());
                    rsProduto.deleteRow();
                    LimpaCampos();
                    PreencherJtableConsulta();
                } else {
                    JOptionPane.showMessageDialog(null, "Um produto deve ser informada!", "Alerta", JOptionPane.ERROR_MESSAGE);
                }
                rsProduto.close();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Não foi possível excluir o produto!", "Alerta", JOptionPane.ERROR_MESSAGE);
            }
        }
        //
    }

    private void PreencherJtableConsulta() {
        ResultSet rsProduto = FMaster.con.executeSQL("select * from estproduto " + Filtra() + " order by id_produto");
        DefaultTableModel modelo = (DefaultTableModel) TbPadrao.getModel();
        modelo.setNumRows(0);
        try {
            while (rsProduto.next()) {
                String tipoProduto = rsProduto.getString("tipo_produto").equals("1") ? "Produto" : "Insumo";
                modelo.addRow(new Object[]{rsProduto.getInt("id_produto"), rsProduto.getString("descricao"), tipoProduto, Utilitario.getFomatDecimal(rsProduto.getFloat("vlr_unitario")), rsProduto.getString("unidade_padrao"), Utilitario.getFomatDecimal3Casas(rsProduto.getFloat("saldo_estoque"))});
            }
            rsProduto.close();
        } catch (SQLException ex) {
            Logger.getLogger(IFProduto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void PreencherJtableInsumo() {
        ResultSet rsProduto = FMaster.con.executeSQL("select * from estitemproduto "
                + "where id_produto = '" + String.valueOf(TFCodigo.getText().isEmpty() ? "0" : TFCodigo.getText()) + "' order by id_produto");
        DefaultTableModel modelo = (DefaultTableModel) TBInsumos.getModel();
        modelo.setNumRows(0);
        try {
            while (rsProduto.next()) {
                modelo.addRow(new Object[]{rsProduto.getInt("id_produto"), rsProduto.getInt("id_itemproduto"), rsProduto.getInt("id_itemproduto"), rsProduto.getString("descricao"), rsProduto.getString("unidade"), Utilitario.getFomatDecimal3Casas(rsProduto.getFloat("qtde"))});
            }
            rsProduto.close();
            HabilitaBtnInsereAlteraProduto();
        } catch (SQLException ex) {
            Logger.getLogger(IFProduto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private String Filtra() {
        String sCodIni = TFCod_Ini.getText().isEmpty() ? "0" : TFCod_Ini.getText();
        String sCodFin = TFCod_Fin.getText().isEmpty() ? "0" : TFCod_Fin.getText();
        String sVlrIni = (FTVlr_Ini.getText().replaceAll(",", "."));
        String sVlrFin = (FTVlr_Fin.getText().replaceAll(",", "."));
        String descricao = TFDESCGERAL.getText().isEmpty() ? "" : TFDESCGERAL.getText();
        String tipo_produto = String.valueOf(CBConsultaTipoProduto.getSelectedIndex());
        String filtro = "";

        if (!sCodIni.equals("0")) {
            if (filtro.equals("")) {
                filtro = " where id_produto >= '" + sCodIni + "'";
            }
        }
        if (!sCodFin.equals("0")) {
            if (filtro.equals("")) {
                filtro = " where id_produto <= '" + sCodFin + "'";
            } else {
                filtro = filtro + " and id_produto <= '" + sCodFin + "'";
            }
        }

        if (!sVlrIni.equals("0.00")) {
            if (filtro.equals("")) {
                filtro = " where vlr_unitario >= '" + sVlrIni + "'";
            } else {
                filtro = filtro + " and vlr_unitario >= '" + sVlrIni + "'";
            }
        }

        if (!sVlrFin.equals("0.00")) {
            if (filtro.equals("")) {
                filtro = " where vlr_unitario <= '" + sVlrFin + "'";
            } else {
                filtro = filtro + " and vlr_unitario <= '" + sVlrFin + "'";
            }
        }

        if (!descricao.equals("")) {
            if (filtro.equals("")) {
                filtro = " where Upper(descricao) like '%" + descricao.toUpperCase() + "%'";
            } else {
                filtro = filtro + " and Upper(descricao) like '%" + descricao.toUpperCase() + "%'";
            }
        }

        if (!tipo_produto.equals("0")) {
            if (filtro.equals("")) {
                filtro = " where tipo_produto = '" + tipo_produto + "'";
            } else {
                filtro = filtro + " and tipo_produto = '" + tipo_produto + "'";
            }
        }
        return filtro;
    }

    private void posicionaProduto() {
        String id_produto = Utilitario.getValueColumn("Código", TbPadrao);
        ResultSet rsProduto = FMaster.con.executeSQL("select * from estproduto where id_produto = '" + id_produto + "'");
        try {
            rsProduto.first();
            if (rsProduto.isFirst()) {
                TFCodigo.setText(id_produto);
                prencherHeder(Integer.parseInt(id_produto));
                jTabbedPane1.setSelectedIndex(0);
            }
            rsProduto.close();
        } catch (SQLException ex) {
            Logger.getLogger(IFComanda.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void ExcluiProduto() {
        try {
            if (TBInsumos.getSelectedRow() != -1) {
                String id_produto = Utilitario.getValueColumn("id_produto", TBInsumos);
                String id_itemproduto = Utilitario.getValueColumn("id_itemproduto", TBInsumos);
                FMaster.con.executeUpdate("delete from estitemproduto where id_produto = '" + id_produto + "' and id_itemproduto = '" + id_itemproduto + "'");
                PreencherJtableInsumo();
            } else {
                JOptionPane.showMessageDialog(null, "Selecione um insumo!", "Alerta", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Não foi possível excluir o insumo!", "Alerta", JOptionPane.ERROR_MESSAGE);
        } finally {
            HabilitaBtnInsereAlteraProduto();
        }

    }

    private void HabilitaBtnInsereAlteraProduto() {
        if (TBInsumos.getSelectedRow() != -1) {
            BTAlteraProduto.setEnabled(true);
            BTExcluiProduto.setEnabled(true);
        } else {
            BTAlteraProduto.setEnabled(false);
            BTExcluiProduto.setEnabled(false);
        }
    }

    private void AlternaCampos() {
        int tipoProduto = CBTipoProduto.getSelectedIndex();
        if (tipoProduto == 0) {
            CBUnidadePadrao.setVisible(false);
            TFValorUnitario.setVisible(true);
            LBAlterna.setText("Valor unitário");
            CBUnidadePadrao.setSelectedIndex(0);

            LBSaldoEmEstoque.setVisible(false);
            TFSaldoEmEstoque.setVisible(false);
        } else {
            CBUnidadePadrao.setVisible(true);
            TFValorUnitario.setVisible(false);
            LBAlterna.setText("Unidade padrão");
            TFValorUnitario.setText("");

            LBSaldoEmEstoque.setVisible(true);
            TFSaldoEmEstoque.setVisible(true);
        }
    }

    private void preencheUnidadePadrao() {
        ResultSet rsUnidade = FMaster.con.executeSQL("select * from grcunidade order by id_unidade");
        try {
            rsUnidade.first();
            if (rsUnidade.isFirst()) {
                do {
                    CBUnidadePadrao.addItem(rsUnidade.getString("id_unidade"));
                } while (rsUnidade.next());
            }
            rsUnidade.close();
        } catch (SQLException ex) {
            Logger.getLogger(DLCadItemEntrada.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
