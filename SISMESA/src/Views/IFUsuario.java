/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * IFUsuario.java
 *
 * Created on 18/05/2010, 23:02:05
 */
package Views;

import classess.EncriptaSenha;
import classess.Utilitario;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alexandre
 */
public class IFUsuario extends javax.swing.JInternalFrame {

    Object[] options = {"Sim", "Não"};


    /** Creates new form IFUsuario */
    public IFUsuario() {
        initComponents();
        //redimenciona o lookandFeeld de acordo com o selecionado
        SwingUtilities.updateComponentTreeUI(this);
        this.pack();
        LimpaCampos();
        PreencherJtableConsulta();
        DesabilitaCamposSenha();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        TFCodUser = new Componentes.DKJTFInteger();
        jLabel1 = new javax.swing.JLabel();
        TFNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        PFSenha = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        PFSenhaAtual = new javax.swing.JPasswordField();
        LBSenha_Atual = new javax.swing.JLabel();
        PFNovaSenha = new javax.swing.JPasswordField();
        LBNova_Senha = new javax.swing.JLabel();
        BTNovo = new javax.swing.JButton();
        BTSalvar = new javax.swing.JButton();
        BTExcluir = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        TFNomeGeral = new javax.swing.JTextField();
        BT_FILTER = new javax.swing.JButton();
        TFId_Ini = new Componentes.DKJTFInteger();
        TFId_Fin = new Componentes.DKJTFInteger();
        jScrollPane2 = new javax.swing.JScrollPane();
        TB_USER = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setTitle("Cadastro de usuários");
        setMinimumSize(new java.awt.Dimension(523, 256));

        jTabbedPane1.setPreferredSize(new java.awt.Dimension(450, 351));

        jPanel1.setLayout(null);

        TFCodUser.setEditable(false);
        TFCodUser.setFocusable(false);
        jPanel1.add(TFCodUser);
        TFCodUser.setBounds(10, 30, 90, 20);

        jLabel1.setText("Cód. Usuário"); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(10, 11, 80, 14);
        jPanel1.add(TFNome);
        TFNome.setBounds(110, 30, 390, 20);

        jLabel2.setText("Nome do usuário"); // NOI18N
        jPanel1.add(jLabel2);
        jLabel2.setBounds(110, 10, 140, 14);

        PFSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PFSenhaActionPerformed(evt);
            }
        });
        jPanel1.add(PFSenha);
        PFSenha.setBounds(10, 80, 90, 20);

        jLabel3.setText("Senha"); // NOI18N
        jPanel1.add(jLabel3);
        jLabel3.setBounds(10, 60, 80, 14);

        PFSenhaAtual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PFSenhaAtualActionPerformed(evt);
            }
        });
        jPanel1.add(PFSenhaAtual);
        PFSenhaAtual.setBounds(110, 80, 72, 20);

        LBSenha_Atual.setText("Senha atual"); // NOI18N
        jPanel1.add(LBSenha_Atual);
        LBSenha_Atual.setBounds(110, 60, 70, 14);
        jPanel1.add(PFNovaSenha);
        PFNovaSenha.setBounds(200, 80, 72, 20);

        LBNova_Senha.setText("Nova Senha"); // NOI18N
        jPanel1.add(LBNova_Senha);
        LBNova_Senha.setBounds(200, 60, 70, 14);

        BTNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Clear-32.png"))); // NOI18N
        BTNovo.setText("Limpar"); // NOI18N
        BTNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNovoActionPerformed(evt);
            }
        });
        jPanel1.add(BTNovo);
        BTNovo.setBounds(200, 160, 100, 30);

        BTSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/save_16.png"))); // NOI18N
        BTSalvar.setText("Salvar"); // NOI18N
        BTSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTSalvarActionPerformed(evt);
            }
        });
        jPanel1.add(BTSalvar);
        BTSalvar.setBounds(300, 160, 100, 30);

        BTExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/delete_16.png"))); // NOI18N
        BTExcluir.setText("Excluir"); // NOI18N
        BTExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTExcluirActionPerformed(evt);
            }
        });
        jPanel1.add(BTExcluir);
        BTExcluir.setBounds(400, 160, 100, 30);

        jTabbedPane1.addTab("Cadastro", jPanel1);

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel7.setMinimumSize(new java.awt.Dimension(500, 64));
        jPanel7.setName(""); // NOI18N

        jLabel9.setText("ID Inicial:"); // NOI18N

        jLabel10.setText("ID Final:"); // NOI18N

        jLabel13.setText("Nome/Geral:"); // NOI18N

        TFNomeGeral.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TFNomeGeralKeyReleased(evt);
            }
        });

        BT_FILTER.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Clear-32.png"))); // NOI18N
        BT_FILTER.setText("Limpar"); // NOI18N
        BT_FILTER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_FILTERActionPerformed(evt);
            }
        });
        BT_FILTER.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BT_FILTERKeyPressed(evt);
            }
        });

        TFId_Ini.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TFId_IniFocusLost(evt);
            }
        });

        TFId_Fin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TFId_FinFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(TFId_Ini, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TFId_Fin, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(TFNomeGeral, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BT_FILTER, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(157, 157, 157))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(TFId_Ini, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(TFId_Fin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(TFNomeGeral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(BT_FILTER, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        TB_USER.setAutoCreateRowSorter(true);
        TB_USER.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "id_usuario", "Cód. Usuario", "Nome"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TB_USER.setDragEnabled(true);
        TB_USER.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TB_USERMouseClicked(evt);
            }
        });
        TB_USER.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TB_USERKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(TB_USER);
        TB_USER.getColumnModel().getColumn(0).setMinWidth(0);
        TB_USER.getColumnModel().getColumn(0).setPreferredWidth(0);
        TB_USER.getColumnModel().getColumn(0).setMaxWidth(0);
        TB_USER.getColumnModel().getColumn(1).setMinWidth(100);
        TB_USER.getColumnModel().getColumn(1).setPreferredWidth(100);
        TB_USER.getColumnModel().getColumn(1).setMaxWidth(100);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Pesquisa", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
        );

        setBounds(100, 50, 523, 256);
    }// </editor-fold>//GEN-END:initComponents

    private void TFNomeGeralKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TFNomeGeralKeyReleased
        PreencherJtableConsulta();
    }//GEN-LAST:event_TFNomeGeralKeyReleased

    private void BT_FILTERKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BT_FILTERKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            LimpaCamposSelecao();
            PreencherJtableConsulta();
        }
    }//GEN-LAST:event_BT_FILTERKeyPressed

    private void TB_USERMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TB_USERMouseClicked
        if (evt.getClickCount() > 1) {
            posicionaUsuario();
        }
    }//GEN-LAST:event_TB_USERMouseClicked

    private void BT_FILTERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BT_FILTERActionPerformed
        LimpaCamposSelecao();
        PreencherJtableConsulta();
    }//GEN-LAST:event_BT_FILTERActionPerformed

    private void TB_USERKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TB_USERKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            posicionaUsuario();
        }
    }//GEN-LAST:event_TB_USERKeyPressed

    private void TFId_IniFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TFId_IniFocusLost
        PreencherJtableConsulta();
        PreencherJtableConsulta();
    }//GEN-LAST:event_TFId_IniFocusLost

    private void TFId_FinFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TFId_FinFocusLost
        PreencherJtableConsulta();
    }//GEN-LAST:event_TFId_FinFocusLost

    private void PFSenhaAtualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PFSenhaAtualActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_PFSenhaAtualActionPerformed

    private void PFSenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PFSenhaActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_PFSenhaActionPerformed

    private void BTNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNovoActionPerformed
        LimpaCampos();
        DesabilitaCamposSenha();
}//GEN-LAST:event_BTNovoActionPerformed

    private void BTSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTSalvarActionPerformed
        if (TFCodUser.getText().isEmpty()) {
            SalvaUsuario();
        } else {
            AlterarUsuario();
        }
        PreencherJtableConsulta();
    }//GEN-LAST:event_BTSalvarActionPerformed

    private void BTExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTExcluirActionPerformed
        DeletaUsuario();
        PreencherJtableConsulta();
        DesabilitaCamposSenha();
}//GEN-LAST:event_BTExcluirActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTExcluir;
    private javax.swing.JButton BTNovo;
    private javax.swing.JButton BTSalvar;
    private javax.swing.JButton BT_FILTER;
    private javax.swing.JLabel LBNova_Senha;
    private javax.swing.JLabel LBSenha_Atual;
    private javax.swing.JPasswordField PFNovaSenha;
    private javax.swing.JPasswordField PFSenha;
    private javax.swing.JPasswordField PFSenhaAtual;
    private javax.swing.JTable TB_USER;
    private Componentes.DKJTFInteger TFCodUser;
    private Componentes.DKJTFInteger TFId_Fin;
    private Componentes.DKJTFInteger TFId_Ini;
    private javax.swing.JTextField TFNome;
    private javax.swing.JTextField TFNomeGeral;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables

//    private void PreencheHeader(int id_usuario) {
//        ResultSet rsPreencheHeder = FMaster.con.executeSQL("select * from grcusuario where id_usuario = " + id_usuario);
//        try {
//            rsPreencheHeder.first();
//            if (rsPreencheHeder.isFirst()) {
//                TFCodUser.setText(rsPreencheHeder.getString("id_usuario"));
//                TFNome.setText(rsPreencheHeder.getString("nome"));
//                jTabbedPane1.setSelectedIndex(0);
//            }
//            rsPreencheHeder.close();
//
//        } catch (SQLException ex) {
//            Logger.getLogger(IFUsuario.class.getName()).log(Level.SEVERE, null, ex);
//        }
//    }

    private void LimpaCampos() {
        TFCodUser.setText("");
        TFNome.setText("");
        PFSenha.setText("");
        PFNovaSenha.setText("");
        PFSenhaAtual.setText("");
    }

    private void SalvaUsuario() {
        ResultSet rsUser = FMaster.con.executeSQL("select * from grcusuario where id_usuario = 0");
        try {
            String senha = EncriptaSenha.encripta(String.valueOf(PFSenha.getPassword()));
            rsUser.first();
            rsUser.moveToInsertRow();
            rsUser.updateInt("id_usuario", Utilitario.getSequencia("grcusuario", "id_usuario"));
            rsUser.updateString("nome", TFNome.getText());
            rsUser.updateString("senha", senha);
            rsUser.insertRow();
            prencherHeder(rsUser.getInt("id_usuario"));
            rsUser.close();
        } catch (SQLException ex) {
            Logger.getLogger(IFUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

//    private void Filtra(String sFiltroGeral) {
//        String sIDIni = TFId_Ini.getText();
//        String sIDFin = TFId_Fin.getText();
//        String sFiltro = "";
//
//        if (!sIDIni.equals("")) {
//            sFiltro = (" ID_USUARIO>=" + sIDIni);
//        }
//        if (!sIDFin.equals("")) {
//            if (!sFiltro.equals("")) {
//                sFiltro = (sFiltro + " AND");
//            }
//            sFiltro = (sFiltro + " ID_USUARIO<=" + sIDFin);
//        }
//
//        if ((!sFiltroGeral.equals("")) && (!sFiltro.equals(""))) {
//            sFiltro = (sFiltro + " AND (" + sFiltroGeral + ")");
//        } else if (sFiltro.equals("")) {
//            sFiltro = sFiltroGeral;
//        }
//        if (!sFiltro.equals("")) {
//            sFiltro = (sFiltro + "ORDER BY ID_USUARIO");
//        }
//
//        PreencheTabela(sFiltro);
//
//    }
//    private void FiltraGeral() {
//        String sFiltro = TFNomeGeral.getText().trim();
//        if (!sFiltro.equals("")) {
//            sFiltro = (" (UPPER(CAST(ID_USUARIO AS VARCHAR))) LIKE '%" + sFiltro.toUpperCase() + "%' OR"
//                    + " (UPPER(NOME)) LIKE '%" + sFiltro.toUpperCase() + "%' OR"
//                    + " (UPPER(CAST(EMPRESA AS VARCHAR))) LIKE '%" + sFiltro.toUpperCase() + "%'");
//
//        }
//        Filtra(sFiltro);
//    }
    private void LimpaCamposSelecao() {
        TFId_Ini.setText("");
        TFId_Fin.setText("");
        TFNomeGeral.setText("");
    }

    private void prencherHeder(int id) {
        ResultSet rsConsultaRegInserido = FMaster.con.executeSQL("select * from grcusuario where id_usuario = '" + id + "'");
        try {
            rsConsultaRegInserido.first();
            if (rsConsultaRegInserido.isFirst()) {
                TFCodUser.setText(rsConsultaRegInserido.getString("id_usuario"));
                TFNome.setText(rsConsultaRegInserido.getString("nome"));
                PFSenha.setText(rsConsultaRegInserido.getString("senha"));
                PFNovaSenha.setText("");
                PFSenhaAtual.setText("");
                TFNome.requestFocus();
            }
            rsConsultaRegInserido.close();
            DesabilitaCamposSenha();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problema no posicionamento do produto");
        }
    }

    private void AlterarUsuario() {
        int id_usuario = Integer.parseInt(TFCodUser.getText().isEmpty() ? "0" : TFCodUser.getText());

        try {
            ResultSet rsInsereUser = FMaster.con.executeSQL("select * from grcusuario where id_usuario = " + id_usuario);
            rsInsereUser.first();
            if (rsInsereUser.isFirst()) {
                int iresp = JOptionPane.showOptionDialog(null, "Deseja alterar?", "", JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE,
                        null, //do not use a custom Icon
                        options, //the titles of buttons
                        options[0]); //default button title
                if (iresp == 0) {
                    String senhaAtual = EncriptaSenha.encripta(String.valueOf(PFSenhaAtual.getPassword()));
                    if (!senhaAtual.equals(rsInsereUser.getString("senha"))) {
                        JOptionPane.showMessageDialog(null, "Senha atual informada não confere!", "Alerta", JOptionPane.ERROR_MESSAGE);
                        rsInsereUser.close();
                        return;
                    }
                    rsInsereUser.absolute(rsInsereUser.getRow());
                    rsInsereUser.updateString("nome", TFNome.getText());
                    rsInsereUser.updateString("senha", EncriptaSenha.encripta(String.valueOf(PFNovaSenha.getPassword())));
                    rsInsereUser.updateRow();
                }
            }
            rsInsereUser.close();
        } catch (SQLException ex) {
            Logger.getLogger(IFUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void posicionaUsuario() {
        String id_usuario = Utilitario.getValueColumn("id_usuario", TB_USER);
        ResultSet rsUsuario = FMaster.con.executeSQL("select * from grcusuario where id_usuario = '" + id_usuario + "'");
        try {
            rsUsuario.first();
            if (rsUsuario.isFirst()) {
                prencherHeder(rsUsuario.getInt("id_usuario"));
                jTabbedPane1.setSelectedIndex(0);
            }
            rsUsuario.close();
        } catch (SQLException ex) {
            Logger.getLogger(IFComanda.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void DeletaUsuario() {
        if (!TFCodUser.getText().isEmpty()) {
            String id_usuario = TFCodUser.getText().isEmpty() ? "0" : TFCodUser.getText();
            ResultSet rsUsuario = FMaster.con.executeSQL("select * from grcusuario where id_usuario = '" + id_usuario + "'");
            try {
                rsUsuario.first();
                if (rsUsuario.isFirst()) {
                    rsUsuario.absolute(rsUsuario.getRow());
                    rsUsuario.deleteRow();
                    LimpaCampos();
                } else {
                    JOptionPane.showMessageDialog(null, "Um usuario deve ser informado!", "Alerta", JOptionPane.ERROR_MESSAGE);
                }
                rsUsuario.close();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Não foi possível excluir!", "Alerta", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void PreencherJtableConsulta() {
        ResultSet rsUsuario = FMaster.con.executeSQL("select * from grcusuario " + Filtra() + " order by id_usuario");
        DefaultTableModel modelo = (DefaultTableModel) TB_USER.getModel();
        modelo.setNumRows(0);
        try {
            while (rsUsuario.next()) {
                modelo.addRow(new Object[]{rsUsuario.getString("id_usuario"), rsUsuario.getString("id_usuario"), rsUsuario.getString("nome")});
            }
            rsUsuario.close();
        } catch (SQLException ex) {
            Logger.getLogger(IFProduto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private String Filtra() {
        String sIDIni = TFId_Ini.getText().isEmpty() ? "0" : TFId_Ini.getText();
        String sIDFin = TFId_Fin.getText().isEmpty() ? "0" : TFId_Fin.getText();
        String descricao = TFNomeGeral.getText().isEmpty() ? "" : TFNomeGeral.getText();
        String filtro = "";

        if (!sIDIni.equals("0")) {
            if (filtro.equals("")) {
                filtro = " where id_usuario >= '" + sIDIni + "'";
            }
        }
        if (!sIDFin.equals("0")) {
            if (filtro.equals("")) {
                filtro = " where id_usuario <= '" + sIDFin + "'";
            } else {
                filtro = filtro + " and id_usuario <= '" + sIDFin + "'";
            }
        }

        if (!descricao.equals("")) {
            if (filtro.equals("")) {
                filtro = " where Upper(nome) like '%" + descricao.toUpperCase() + "%'";
            } else {
                filtro = filtro + " and Upper(nome) like '%" + descricao.toUpperCase() + "%'";
            }
        }
        return filtro;
    }

    private void DesabilitaCamposSenha() {
        if (TFCodUser.getText().isEmpty()) {
            PFNovaSenha.setVisible(false);
            PFSenhaAtual.setVisible(false);
            LBNova_Senha.setVisible(false);
            LBSenha_Atual.setVisible(false);
            PFSenha.setEditable(true);
            PFSenha.setFocusable(true);
        } else {
            PFNovaSenha.setVisible(true);
            PFSenhaAtual.setVisible(true);
            LBNova_Senha.setVisible(true);
            LBSenha_Atual.setVisible(true);
            PFSenha.setEditable(false);
            PFSenha.setFocusable(false);
        }
    }
}
